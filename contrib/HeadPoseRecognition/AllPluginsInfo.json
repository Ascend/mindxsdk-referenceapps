[{"name":"mxpi_rtspsrc","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"RTSP packet receiver","Klass":"Source/Network","Description":"Receive data over the network via RTSP (RFC 2326)","Author":"hw.dedge","Classification":"Input"},"Plugin Details":{"Name":"mxpi_rtspsrc","Description":"rtsp src bin","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_rtspsrc.so","Version":"1.0.0","License":"LGPL","Source module":"mxpi_rtspsrc","Binary package":"Gstreamer","Origin URL":"www.huawei.com"},"Pad Templates":{"SRC template":[{"padname":"src_%u","Availability":"On request","Capabilities":{"video/x-h264":{"alignment":"au","parsed":"true","stream-format":"byte-stream"}}}]},"Pads":null,"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_rtspsrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"async-handling":{"blurb":"The bin will handle Asynchronous state changes","flags":"readable, writable","type":"Boolean","default":"false"},"message-forward":{"blurb":"Forwards all children messages","flags":"readable, writable","type":"Boolean","default":"false"},"rtspUrl":{"blurb":"Location of the RTSP url to read","flags":"readable, writable","type":"String","default":"null"},"channelId":{"blurb":"channel id for this buffer","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"timeout":{"blurb":"Fail after timeout microseconds on connections (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"}}},{"name":"mxpi_textgenerationpostprocessor","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_textgenerationpostprocessor","Description":"MxpiTextGenerationPostProcessor","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_textgenerationpostprocessor.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/tensor":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/texts":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_textgenerationpostprocessor"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"postProcessConfigPath":{"blurb":"config path","flags":"readable, writable","type":"String","default":""},"postProcessConfigContent":{"blurb":"config content, its type is [json::object]","flags":"readable, writable","type":"String","default":""},"labelPath":{"blurb":"label path","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"postProcessLibPath":{"blurb":"post processor lib path","flags":"readable, writable","type":"String","default":""},"funcLanguage":{"blurb":"the func Language of plugin","flags":"readable, writable","type":"String","default":"c++"},"className":{"blurb":"the func class name of post plugin","flags":"readable, writable","type":"String","default":""},"pythonModule":{"blurb":"the python module name of post plugin","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_opencvosd","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_opencvosd","Description":"MxpiOpencvOsd","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_opencvosd.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/yuv":{}}},{"padname":"sink1","Availability":"Always","Capabilities":{"metadata/osd":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"image/yuv":{}}}]},"Pads":{"SINK":[{"name":"sink0","Pad Template":"sink0"},{"name":"sink1","Pad Template":"sink1"}],"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_opencvosd"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSourceImage":{"blurb":"dataSource of image","flags":"readable, writable","type":"String","default":"auto"},"dataSourceOsd":{"blurb":"dataSource of OSD instances","flags":"readable, writable","type":"String","default":"auto"}}},{"name":"mxpi_imageresize","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_imageresize","Description":"VpcResize","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_imageresize.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{},"metadata/object":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_imageresize"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"removeParentData":{"blurb":"remove the metaData of parent plugin","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"parentName":{"blurb":"the key of input data","flags":"readable, writable","type":"String","default":""},"resizeHeight":{"blurb":"the height of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"8192","range_min":"0"},"resizeWidth":{"blurb":"the width of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"8192","range_min":"0"},"minDimension":{"blurb":"the min dimension of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"224","range_max":"8192","range_min":"32"},"maxDimension":{"blurb":"the max dimension of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"224","range_max":"8192","range_min":"32"},"resizeType":{"blurb":"keep aspect ratio resizer","flags":"readable, writable","type":"String","default":"Resizer_Stretch"},"RGBValue":{"blurb":"set the image background","flags":"readable, writable","type":"String","default":""},"interpolation":{"blurb":"set interpolation of resize image","flags":"readable, writable","type":"Integer","default":"0","range_max":"4","range_min":"0"},"paddingType":{"blurb":"the padding mode of image","flags":"readable, writable","type":"String","default":"Padding_NO"},"cvProcessor":{"blurb":"set handle method of image decode","flags":"readable, writable","type":"String","default":"ascend"},"scaleValue":{"blurb":"the scalaValue of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"32","range_max":"8192","range_min":"32"},"paddingHeight":{"blurb":"the height of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"32","range_max":"8192","range_min":"32"},"paddingWidth":{"blurb":"the width of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"32","range_max":"8192","range_min":"32"},"paddingColorB":{"blurb":"the width of resize image","flags":"readable, writable","type":"Float","default":"0","range_max":"255","range_min":"0"},"paddingColorG":{"blurb":"the width of resize image","flags":"readable, writable","type":"Float","default":"0","range_max":"255","range_min":"0"},"paddingColorR":{"blurb":"the width of resize image","flags":"readable, writable","type":"Float","default":"0","range_max":"255","range_min":"0"},"handleMethod":{"blurb":"handle method of image decode","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_datatransfer","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_datatransfer","Description":"MxpiDataTransfer","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_datatransfer.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{},"metadata/tensor":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{},"metadata/tensor":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_datatransfer"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"transferMode":{"blurb":"move the memory in three modes: auto, d2h(device2host), h2d(host2device)","flags":"readable, writable","type":"String","default":"auto"},"removeSourceData":{"blurb":"free the memory inside the input data","flags":"readable, writable","type":"String","default":"yes"}}},{"name":"mxpi_imagenormalize","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_imagenormalize","Description":"MxpiImageNormalize","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_imagenormalize.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_imagenormalize"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"alpha":{"blurb":"alpha for formula x' = (x - alpha) / beta","flags":"readable, writable","type":"String","default":"0,0,0"},"beta":{"blurb":"beta for formula x' = (x - alpha) / beta","flags":"readable, writable","type":"String","default":"1,1,1"},"format":{"blurb":"output data format, only support RGB888,BGR888,auto","flags":"readable, writable","type":"String","default":"auto"},"dataType":{"blurb":"output data type, only support UINT8,FLOAT32,auto","flags":"readable, writable","type":"String","default":"auto"}}},{"name":"mxpi_dumpdata","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_dumpdata","Description":"MpDumpData","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_dumpdata.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_dumpdata"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"filterMetaDataKeys":{"blurb":"enter the keys to be filtered, split by ','","flags":"readable, writable","type":"String","default":""},"requiredMetaDataKeys":{"blurb":"enter the required keys, split by ','","flags":"readable, writable","type":"String","default":""},"location":{"blurb":"the location to output the file","flags":"readable, writable","type":"String","default":""},"dumpMemoryData":{"blurb":"whether to dump vision memory or tensor memory","flags":"readable, writable","type":"String","default":"true"}}},{"name":"mxpi_videodecoder","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_videodecoder","Description":"DvppVideoDecoder","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_videodecoder.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"video/x-h264":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"image/yuv":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_videodecoder"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"inputVideoFormat":{"blurb":"the format of input video before decoding, only support H264, H265","flags":"readable, writable","type":"String","default":"H264"},"outputImageFormat":{"blurb":"the format of output image after decoding, only support YUV420SP_NV12, YUV420SP_NV21","flags":"readable, writable","type":"String","default":"YUV420SP_NV12"},"vdecChannelId":{"blurb":"the channel id for vdec channel description","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"31","range_min":"0"},"outMode":{"blurb":"the outMode for callback, 0: delay mode -> default mode, 1: real time mode","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"1","range_min":"0"}}},{"name":"mxpi_imagecrop","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_imagecrop","Description":"MpPictureCrop","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_imagecrop.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/rgb":{},"metadata/object":{}}},{"padname":"sink_%u","Availability":"On request","Capabilities":{"image/rgb":{},"image/yuv":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_imagecrop"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"parentName":{"blurb":"the key of input data","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"dataSourceImage":{"blurb":"the name of image data source","flags":"readable, writable","type":"String","default":"auto"},"resizeHeight":{"blurb":"the height of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"8192","range_min":"0"},"resizeWidth":{"blurb":"the width of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"8192","range_min":"0"},"leftExpandRatio":{"blurb":"Ratio of expanding left","flags":"readable, writable","type":"Float","default":"0","range_max":"1","range_min":"0"},"rightExpandRatio":{"blurb":"Ratio of expanding right","flags":"readable, writable","type":"Float","default":"0","range_max":"1","range_min":"0"},"upExpandRatio":{"blurb":"Ratio of expanding side upward","flags":"readable, writable","type":"Float","default":"0","range_max":"1","range_min":"0"},"downExpandRatio":{"blurb":"Ratio of expanding side downward","flags":"readable, writable","type":"Float","default":"0","range_max":"1","range_min":"0"},"minDimension":{"blurb":"the min dimension of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"224","range_max":"8192","range_min":"32"},"maxDimension":{"blurb":"the max dimension of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"224","range_max":"8192","range_min":"32"},"resizeType":{"blurb":"keep aspect ratio resizer","flags":"readable, writable","type":"String","default":"Resizer_Stretch"},"RGBValue":{"blurb":"set the image background","flags":"readable, writable","type":"String","default":""},"paddingType":{"blurb":"the padding mode of image","flags":"readable, writable","type":"String","default":"Padding_NO"},"cvProcessor":{"blurb":"set handle method of image decode","flags":"readable, writable","type":"String","default":"ascend"},"cropType":{"blurb":"set crop type of image decode","flags":"readable, writable","type":"String","default":"cropCoordinate"},"cropHeight":{"blurb":"the height of crop image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"819200","range_min":"0"},"cropWidth":{"blurb":"the width of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"819200","range_min":"0"},"handleMethod":{"blurb":"handle method of image decode","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_nmsoverlapedroi","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_nmsoverlapedroi","Description":"MxpiNmsOverlapedRoiV1","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_nmsoverlapedroi.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/object":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/object":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_nmsoverlapedroi"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":""},"blockName":{"blurb":"the key of block data","flags":"readable, writable","type":"String","default":""},"nmsThreshold":{"blurb":"the threshold of nms","flags":"readable, writable","type":"Float","default":"0.45","range_max":"1","range_min":"0"}}},{"name":"mxpi_synchronize","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_synchronize","Description":"MxpiSynchronize","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_synchronize.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_synchronize"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"config":{"blurb":"default config param","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_motsimplesortV2","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_motsimplesortV2","Description":"MxpiMotSimpleSortV2","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_motsimplesortV2.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/object":{}}},{"padname":"sink_%u","Availability":"On request","Capabilities":{"metadata/feature":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/tracked":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_motsimplesortV2"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSourceDetection":{"blurb":"the name of object detection data source","flags":"readable, writable","type":"String","default":"auto"},"dataSourceFeature":{"blurb":"the name of feature data source","flags":"readable, writable","type":"String","default":"auto"},"trackThreshold":{"blurb":"Threshold of tracking","flags":"readable, writable","type":"Float","default":"0.5","range_max":"1","range_min":"0"},"lostThreshold":{"blurb":"Threshold of losing object","flags":"readable, writable","type":"Unsigned Integer","default":"5","range_max":"10","range_min":"0"}}},{"name":"mxpi_imageencoder","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_imageencoder","Description":"DvppImageEncoder","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_imageencoder.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_imageencoder"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"encodeLevel":{"blurb":"the level for image encode","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"100","range_min":"0"},"dataSource":{"blurb":"the key for get data","flags":"readable, writable","type":"String","default":"auto"}}},{"name":"mxpi_objectpostprocessor","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_objectpostprocessor","Description":"MxpiObjectPostProcessor","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_objectpostprocessor.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/tensor":{}}},{"padname":"sink_%u","Availability":"On request","Capabilities":{"image/rgb":{},"image/yuv":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/object":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_objectpostprocessor"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"postProcessConfigPath":{"blurb":"config path","flags":"readable, writable","type":"String","default":""},"postProcessConfigContent":{"blurb":"config content, its type is [json::object]","flags":"readable, writable","type":"String","default":""},"labelPath":{"blurb":"label path","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"postProcessLibPath":{"blurb":"post processor lib path","flags":"readable, writable","type":"String","default":""},"funcLanguage":{"blurb":"the func Language of plugin","flags":"readable, writable","type":"String","default":"c++"},"className":{"blurb":"the func class name of post plugin","flags":"readable, writable","type":"String","default":""},"pythonModule":{"blurb":"the python module name of post plugin","flags":"readable, writable","type":"String","default":""},"dataSourceRoiBoxes":{"blurb":"the name of crop RoiBoxes","flags":"readable, writable","type":"String","default":"auto"},"dataSourceResize":{"blurb":"the name of resize data source","flags":"readable, writable","type":"String","default":"auto"},"dataSourceImage":{"blurb":"the name of image data source","flags":"readable, writable","type":"String","default":"auto"}}},{"name":"mxpi_classpostprocessor","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_classpostprocessor","Description":"MxpiClassPostProcessor","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_classpostprocessor.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/tensor":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/class":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_classpostprocessor"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"postProcessConfigPath":{"blurb":"config path","flags":"readable, writable","type":"String","default":""},"postProcessConfigContent":{"blurb":"config content, its type is [json::object]","flags":"readable, writable","type":"String","default":""},"labelPath":{"blurb":"label path","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"postProcessLibPath":{"blurb":"post processor lib path","flags":"readable, writable","type":"String","default":""},"funcLanguage":{"blurb":"the func Language of plugin","flags":"readable, writable","type":"String","default":"c++"},"className":{"blurb":"the func class name of post plugin","flags":"readable, writable","type":"String","default":""},"pythonModule":{"blurb":"the python module name of post plugin","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_nmsoverlapedroiV2","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_nmsoverlapedroiV2","Description":"MxpiNmsOverlapedRoiV2","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_nmsoverlapedroiV2.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/object":{}}},{"padname":"sink1","Availability":"Always","Capabilities":{"metadata/object":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/object":{}}}]},"Pads":{"SINK":[{"name":"sink0","Pad Template":"sink0"},{"name":"sink1","Pad Template":"sink1"}],"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_nmsoverlapedroiV2"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSourceDetection":{"blurb":"the key for object that was detected by model","flags":"readable, writable","type":"String","default":"auto"},"dataSourceBlock":{"blurb":"the key of block that was divided by man","flags":"readable, writable","type":"String","default":"auto"},"nmsThreshold":{"blurb":"the threshold of nms","flags":"readable, writable","type":"Float","default":"0.45","range_max":"1","range_min":"0"}}},{"name":"mxpi_rtspvideoinfo","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"buffer channelid generator","Klass":"Generic","Description":"Generic Template Element","Author":"root <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_rtspvideoinfo","Description":"add frameid & streamid & channelid on gstbuffer","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_rtspvideoinfo.so","Version":"1.0.0","License":"LGPL","Source module":"MxPluginGenerator","Binary package":"GStreamer","Origin URL":"www.huawei.com"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_rtspvideoinfo"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"qos":{"blurb":"Handle Quality-of-Service events","flags":"readable, writable","type":"Boolean","default":"false"},"channelId":{"blurb":"channel id for this buffer","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"mxpi_semanticsegpostprocessor","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_semanticsegpostprocessor","Description":"MxpiSemanticSegPostProcessor","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_semanticsegpostprocessor.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/tensor":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/semanticseg":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_semanticsegpostprocessor"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"postProcessConfigPath":{"blurb":"config path","flags":"readable, writable","type":"String","default":""},"postProcessConfigContent":{"blurb":"config content, its type is [json::object]","flags":"readable, writable","type":"String","default":""},"labelPath":{"blurb":"label path","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"postProcessLibPath":{"blurb":"post processor lib path","flags":"readable, writable","type":"String","default":""},"funcLanguage":{"blurb":"the func Language of plugin","flags":"readable, writable","type":"String","default":"c++"},"className":{"blurb":"the func class name of post plugin","flags":"readable, writable","type":"String","default":""},"pythonModule":{"blurb":"the python module name of post plugin","flags":"readable, writable","type":"String","default":""},"dataSourceRoiBoxes":{"blurb":"the name of crop RoiBoxes","flags":"readable, writable","type":"String","default":"auto"},"dataSourceResize":{"blurb":"the name of resize data source","flags":"readable, writable","type":"String","default":"auto"},"dataSourceImage":{"blurb":"the name of image data source","flags":"readable, writable","type":"String","default":"auto"}}},{"name":"mxpi_warpperspective","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_warpperspective","Description":"MxpiWarpPerspective","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_warpperspective.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/object":{},"metadata/texts":{}}},{"padname":"sink_%u","Availability":"On request","Capabilities":{"image/rgb":{},"image/yuv":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_warpperspective"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"oriImageDataSource":{"blurb":"the name of dynamic pad data source","flags":"readable, writable","type":"String","default":""},"debugMode":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"false"}}},{"name":"mxpi_distributor","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_distributor","Description":"MxpiDistributor","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_distributor.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src_%u","Availability":"On request","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_distributor"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"channelIds":{"blurb":"rule of distribute","flags":"readable, writable","type":"String","default":""},"classIds":{"blurb":"rule of distribute","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"distributeAll":{"blurb":"send or not send data if input has not target data","flags":"readable, writable","type":"String","default":"no"}}},{"name":"mxpi_tensorinfer","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_tensorinfer","Description":"MxpiTensorInfer","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_tensorinfer.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/yuv":{},"metadata/tensor":{}}},{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/tensor":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_tensorinfer"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"modelPath":{"blurb":"model path","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"dynamicStrategy":{"blurb":"strategy to choose batchsize using dynamic model: Nearest, Upper, Lower","flags":"readable, writable","type":"String","default":"Nearest"},"waitingTime":{"blurb":"maximun time for model infering with largest batchsize to wait for data","flags":"readable, writable","type":"Integer","default":"5000","range_max":"1000000","range_min":"1"},"outputDeviceId":{"blurb":"the deviceId which model output tensor will be copied to. Specially, when set as -1, model output tensor will be copied to host","flags":"readable, writable","type":"Integer","default":"-1","range_max":"7","range_min":"-1"},"skipModelCheck":{"blurb":"skip ModelCheck if set as 1 (not suggested).","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"singleBatchInfer":{"blurb":"model input tensor shape has batch dimension, yes:1, no:0","flags":"readable, writable","type":"Unsigned Integer","default":"1","range_max":"1","range_min":"0"},"outputHasBatchDim":{"blurb":"model output tensor shape has batch dimension, yes:1, no:0","flags":"readable, writable","type":"Unsigned Integer","default":"1","range_max":"1","range_min":"0"}}},{"name":"mxpi_parallel2serial","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_parallel2serial","Description":"MxpiParallel2Serial","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_parallel2serial.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_parallel2serial"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"}}},{"name":"mxpi_motsimplesort","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_motsimplesort","Description":"MxpiMotSimpleSortV1","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_motsimplesort.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_motsimplesort"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSourceDetection":{"blurb":"the name of object detection data source","flags":"readable, writable","type":"String","default":""},"dataSourceFeature":{"blurb":"the name of feature data source","flags":"readable, writable","type":"String","default":""},"trackThreshold":{"blurb":"Threshold of tracking","flags":"readable, writable","type":"Float","default":"0.5","range_max":"1","range_min":"0"},"lostThreshold":{"blurb":"Threshold of losing object","flags":"readable, writable","type":"Unsigned Integer","default":"5","range_max":"10","range_min":"0"}}},{"name":"mxpi_channelosdcoordsconverter","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_channelosdcoordsconverter","Description":"MxpiChannelOsdCoordsConverter","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_channelosdcoordsconverter.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"},{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_channelosdcoordsconverter"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"channelIds":{"blurb":"rule of distribute","flags":"readable, writable","type":"String","default":"-1"}}},{"name":"mxpi_opencvcentercrop","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_opencvcentercrop","Description":"MpOpencvCenterCrop","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_opencvcentercrop.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{},"metadata/object":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_opencvcentercrop"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"cropHeight":{"blurb":"the height of crop image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"819200","range_min":"0"},"cropWidth":{"blurb":"the width of resize image","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"819200","range_min":"0"}}},{"name":"mxpi_channelimagesstitcher","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_channelimagesstitcher","Description":"MxpiChannelImagesStitcher","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_channelimagesstitcher.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"},{"padname":"src_%u","Availability":"On request","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_channelimagesstitcher"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"channelIds":{"blurb":"rule of distribute","flags":"readable, writable","type":"String","default":"-1"},"outputWidth":{"blurb":"the output width of converged image","flags":"readable, writable","type":"Unsigned Integer","default":"32","range_max":"8192","range_min":"32"},"outputHeight":{"blurb":"the output height of converged image","flags":"readable, writable","type":"Unsigned Integer","default":"32","range_max":"8192","range_min":"32"},"RGBValue":{"blurb":"set the image background","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_channelselector","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_channelselector","Description":"MxpiChannelSelector","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_channelselector.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src_%u","Availability":"On request","Capabilities":"ANY"}]},"Pads":null,"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_channelselector"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"channelIds":{"blurb":"rule of distribute","flags":"readable, writable","type":"String","default":"-1"}}},{"name":"mxpi_dataserialize","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_dataserialize","Description":"MpDataSerialize","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_dataserialize.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"result/json-result":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_dataserialize"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"outputDataKeys":{"blurb":"input the keys you want, split by ','","flags":"readable, writable","type":"String","default":""},"eraseHeaderVecFlag":{"blurb":"If headerVec info is not needed, please set it 1","flags":"readable, writable","type":"Unsigned Integer","default":"1","range_max":"1","range_min":"0"}}},{"name":"mxpi_object2osdinstances","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_object2osdinstances","Description":"MxpiObject2OsdInstances","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_object2osdinstances.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_object2osdinstances"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"colorMap":{"blurb":"color of each classId","flags":"readable, writable","type":"String","default":"auto"},"fontFace":{"blurb":"the type of text font","flags":"readable, writable","type":"Integer","default":"0","range_max":"16","range_min":"0"},"fontScale":{"blurb":"fontScale","flags":"readable, writable","type":"Double","default":"1","range_max":"1000","range_min":"0"},"fontThickness":{"blurb":"the thickness of text font","flags":"readable, writable","type":"Integer","default":"1","range_max":"1000","range_min":"0"},"fontLineType":{"blurb":"the line type of text font","flags":"readable, writable","type":"Integer","default":"8","range_max":"16","range_min":"0"},"fontBottomLeftOrigin":{"blurb":"bottomLeftOrigin When true, the image data origin is at the bottom-left corner. Otherwise, it is at the top-left corner.","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"1","range_min":"0"},"rectThickness":{"blurb":"the thickness of object rectangle","flags":"readable, writable","type":"Integer","default":"1","range_max":"1000","range_min":"0"},"rectLineType":{"blurb":"-1:FILLED, 4:LINE_4, 8:LINE_8, 16:LINE_AA","flags":"readable, writable","type":"Integer","default":"0","range_max":"16","range_min":"0"}}},{"name":"mxpi_imagedecoder","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_imagedecoder","Description":"DvppImageDecoder","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_imagedecoder.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/jpeg":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"image/rgb":{},"image/yuv":{},"metadata/object":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_imagedecoder"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"imageFormat":{"blurb":"format of image","flags":"readable, writable","type":"String","default":"jpg"},"cvProcessor":{"blurb":"handle method of image decode","flags":"readable, writable","type":"String","default":"ascend"},"outputDataFormat":{"blurb":"set output image format of decode","flags":"readable, writable","type":"String","default":"BGR"},"dataType":{"blurb":"set output data type of decode","flags":"readable, writable","type":"String","default":"uint8"},"handleMethod":{"blurb":"handle method of image decode","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_modelinfer","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_modelinfer","Description":"MpModelVisionInfer","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_modelinfer.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/yuv":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/attribute":{},"metadata/class":{},"metadata/feature-vector":{},"metadata/object":{},"metadata/tensor":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_modelinfer"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"modelPath":{"blurb":"model path","flags":"readable, writable","type":"String","default":""},"modelFormat":{"blurb":"model format","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"mindirAippPath":{"blurb":"mindir aipp config path","flags":"readable, writable","type":"String","default":""},"parentName":{"blurb":"the key of input data","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"waitingTime":{"blurb":"maximun time for model infering with largest batchsize to wait for data","flags":"readable, writable","type":"Integer","default":"5000","range_max":"1000000","range_min":"1"},"dynamicStrategy":{"blurb":"strategy to choose batchsize using dynamic model: Nearest-0, Upper-1, Lower-2","flags":"readable, writable","type":"Integer","default":"0","range_max":"2","range_min":"0"},"outputDeviceId":{"blurb":"the deviceId which model output tensor will be copied to. Specially, when set as -1, model output tensor will be copied to host","flags":"readable, writable","type":"Integer","default":"-1","range_max":"7","range_min":"-1"},"tensorFormat":{"blurb":"model style: NHWC-0,NCHW-1","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"pictureCropName":{"blurb":"pictureCrop name","flags":"readable, writable","type":"String","default":""},"postProcessConfigPath":{"blurb":"config path","flags":"readable, writable","type":"String","default":""},"postProcessConfigContent":{"blurb":"config content, its type is [json::object]","flags":"readable, writable","type":"String","default":""},"labelPath":{"blurb":"label path","flags":"readable, writable","type":"String","default":""},"postProcessLibPath":{"blurb":"post processor lib path","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_loaddata","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_loaddata","Description":"MpLoadData","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_loaddata.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_loaddata"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"}}},{"name":"mxpi_facealignment","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_facealignment","Description":"MxpiFaceAlignment","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_facealignment.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"},{"padname":"sink1","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":[{"name":"sink0","Pad Template":"sink0"},{"name":"sink1","Pad Template":"sink1"}],"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_facealignment"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSourceImage":{"blurb":"The name of image data source","flags":"readable, writable","type":"String","default":"auto"},"dataSourceKeyPoint":{"blurb":"The name of keyPoint data source","flags":"readable, writable","type":"String","default":"auto"},"afterFaceAlignmentHeight":{"blurb":"the height of face alignment image","flags":"readable, writable","type":"Unsigned Integer","default":"112","range_max":"8192","range_min":"0"},"afterFaceAlignmentWidth":{"blurb":"the width of face alignment image","flags":"readable, writable","type":"Unsigned Integer","default":"112","range_max":"8192","range_min":"0"}}},{"name":"mxpi_qualitydetection","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_qualitydetection","Description":"QualityDetection","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_qualitydetection.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"image/yuv":{},"metadata/object":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_qualitydetection"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"qualityDetectionConfigContent":{"blurb":"config content, its type is [json::object]","flags":"readable, writable","type":"String","default":""},"qualityDetectionConfigPath":{"blurb":"config path","flags":"readable, writable","type":"String","default":""}}},{"name":"mxpi_videoencoder","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_videoencoder","Description":"DvppVideoEncoder","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_videoencoder.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_videoencoder"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"vencChannelId":{"blurb":"video encoder channel id","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"iFrameInterval":{"blurb":"I frame Interval time","flags":"readable, writable","type":"Unsigned Integer","default":"30","range_max":"2000","range_min":"1"},"imageHeight":{"blurb":"input image height","flags":"readable, writable","type":"Unsigned Integer","default":"1080","range_max":"1920","range_min":"128"},"imageWidth":{"blurb":"input image height","flags":"readable, writable","type":"Unsigned Integer","default":"1920","range_max":"1920","range_min":"128"},"fps":{"blurb":"show the frames per second","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"1","range_min":"0"},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"inputFormat":{"blurb":"input image format","flags":"readable, writable","type":"String","default":"YUV420SP_NV12"},"outputFormat":{"blurb":"output image format","flags":"readable, writable","type":"String","default":"H264"},"rcMode":{"blurb":"print rcMode","flags":"readable, writable","type":"Unsigned Integer","default":"2","range_max":"2","range_min":"0"},"srcRate":{"blurb":"print srcRate","flags":"readable, writable","type":"Unsigned Integer","default":"30","range_max":"120","range_min":"0"},"maxBitRate":{"blurb":"print maxBitRate","flags":"readable, writable","type":"Unsigned Integer","default":"300","range_max":"30000","range_min":"0"},"ipProp":{"blurb":"print ipProp","flags":"readable, writable","type":"Unsigned Integer","default":"70","range_max":"100","range_min":"0"}}},{"name":"mxpi_textobjectpostprocessor","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Template","Klass":"FIXME:Generic","Description":"FIXME:Generic Template Element","Author":" <<user@hostname.org>>","Classification":"Other"},"Plugin Details":{"Name":"mxpi_textobjectpostprocessor","Description":"MxpiTextObjectPostProcessor","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/lib/plugins/libmxpi_textobjectpostprocessor.so","Version":"1.0","License":"Proprietary","Source module":"MxPluginGenerator","Binary package":"TEST","Origin URL":"Huawei"},"Pad Templates":{"SINK template":[{"padname":"sink0","Availability":"Always","Capabilities":{"metadata/tensor":{}}}],"SRC template":[{"padname":"src0","Availability":"Always","Capabilities":{"metadata/texts":{}}}]},"Pads":{"SINK":{"name":"sink0","Pad Template":"sink0"},"SRC":{"name":"src0","Pad Template":"src0"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mxpi_textobjectpostprocessor"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"deviceId":{"blurb":"the chip id of Ascend device","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"},"status":{"blurb":"the data sync status","flags":"readable, writable","type":"Integer","default":"0","range_max":"1","range_min":"0"},"postProcessConfigPath":{"blurb":"config path","flags":"readable, writable","type":"String","default":""},"postProcessConfigContent":{"blurb":"config content, its type is [json::object]","flags":"readable, writable","type":"String","default":""},"labelPath":{"blurb":"label path","flags":"readable, writable","type":"String","default":""},"dataSource":{"blurb":"the name of data source","flags":"readable, writable","type":"String","default":"auto"},"postProcessLibPath":{"blurb":"post processor lib path","flags":"readable, writable","type":"String","default":""},"funcLanguage":{"blurb":"the func Language of plugin","flags":"readable, writable","type":"String","default":"c++"},"className":{"blurb":"the func class name of post plugin","flags":"readable, writable","type":"String","default":""},"pythonModule":{"blurb":"the python module name of post plugin","flags":"readable, writable","type":"String","default":""},"dataSourceRoiBoxes":{"blurb":"the name of crop RoiBoxes","flags":"readable, writable","type":"String","default":"auto"},"dataSourceResize":{"blurb":"the name of resize data source","flags":"readable, writable","type":"String","default":"auto"},"dataSourceImage":{"blurb":"the name of image data source","flags":"readable, writable","type":"String","default":"auto"}}},{"name":"appsrc","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"AppSrc","Klass":"Generic/Source","Description":"Allow the application to feed buffers to a pipeline","Author":"David Schleef <ds@schleef.org>, Wim Taymans <wim.taymans@gmail.com>","Classification":"Input"},"Plugin Details":{"Name":"app","Description":"Elements used to communicate with applications","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstapp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-base","Binary package":"GStreamer Base Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_appsrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"blocksize":{"blurb":"Size in bytes to read per buffer (-1 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"num-buffers":{"blurb":"Number of buffers to output before sending EOS (-1 = unlimited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"typefind":{"blurb":"Run typefind before negotiating (deprecated, non-functional)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-timestamp":{"blurb":"Apply current stream time to buffers","flags":"readable, writable","type":"Boolean","default":"false"},"caps":{"blurb":"The allowed caps for the src pad","flags":"readable, writable","type":"Boxed pointer of type GstCaps"},"size":{"blurb":"The size of the data stream in bytes (-1 if unknown)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"stream-type":{"blurb":"the type of the stream","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"stream           - GST_APP_STREAM_TYPE_STREAM","1":"seekable         - GST_APP_STREAM_TYPE_SEEKABLE","2":"random-access    - GST_APP_STREAM_TYPE_RANDOM_ACCESS"}},"max-bytes":{"blurb":"The maximum number of bytes to queue internally (0 = unlimited)","flags":"readable, writable","type":"Unsigned Integer64","default":"200000","range_max":"18446744073709551615","range_min":"0"},"format":{"blurb":"The format of the segment events and seek","flags":"readable, writable","type":"Enum","default":"2","choice":{"0":"undefined        - GST_FORMAT_UNDEFINED","1":"default          - GST_FORMAT_DEFAULT","2":"bytes            - GST_FORMAT_BYTES","3":"time             - GST_FORMAT_TIME","4":"buffers          - GST_FORMAT_BUFFERS","5":"percent          - GST_FORMAT_PERCENT"}},"block":{"blurb":"Block push-buffer when max-bytes are queued","flags":"readable, writable","type":"Boolean","default":"false"},"is-live":{"blurb":"Whether to act as a live source","flags":"readable, writable","type":"Boolean","default":"false"},"min-latency":{"blurb":"The minimum latency (-1 = default)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"max-latency":{"blurb":"The maximum latency (-1 = unlimited)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"emit-signals":{"blurb":"Emit need-data, enough-data and seek-data signals","flags":"readable, writable","type":"Boolean","default":"true"},"min-percent":{"blurb":"Emit need-data when queued bytes drops below this percent of max-bytes","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"100","range_min":"0"},"current-level-bytes":{"blurb":"The number of currently queued bytes","flags":"readable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"duration":{"blurb":"The duration of the data stream in nanoseconds (GST_CLOCK_TIME_NONE if unknown)","flags":"readable, writable","type":"Unsigned Integer64","default":"18446744073709551615","range_max":"18446744073709551615","range_min":"0"}}},{"name":"appsink","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"AppSink","Klass":"Generic/Sink","Description":"Allow the application to get access to raw buffer","Author":"David Schleef <ds@schleef.org>, Wim Taymans <wim.taymans@gmail.com>","Classification":"Output"},"Plugin Details":{"Name":"app","Description":"Elements used to communicate with applications","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstapp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-base","Binary package":"GStreamer Base Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_appsink"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"sync":{"blurb":"Sync on the clock","flags":"readable, writable","type":"Boolean","default":"true"},"max-lateness":{"blurb":"Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"qos":{"blurb":"Generate Quality-of-Service events upstream","flags":"readable, writable","type":"Boolean","default":"false"},"async":{"blurb":"Go asynchronously to PAUSED","flags":"readable, writable","type":"Boolean","default":"true"},"ts-offset":{"blurb":"Timestamp offset in nanoseconds","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"enable-last-sample":{"blurb":"Enable the last-sample property","flags":"readable, writable","type":"Boolean","default":"true"},"last-sample":{"blurb":"The last sample received in the sink","flags":"readable","type":"Boxed pointer of type GstSample"},"blocksize":{"blurb":"Size in bytes to pull per buffer (0 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"render-delay":{"blurb":"Additional render delay of the sink in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"throttle-time":{"blurb":"The time to keep between rendered buffers (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-bitrate":{"blurb":"The maximum bits per second to render (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"processing-deadline":{"blurb":"Maximum processing deadline in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"20000000","range_max":"18446744073709551615","range_min":"0"},"caps":{"blurb":"The allowed caps for the sink pad","flags":"readable, writable","type":"Boxed pointer of type GstCaps"},"eos":{"blurb":"Check if the sink is EOS or not started","flags":"readable","type":"Boolean","default":"true"},"emit-signals":{"blurb":"Emit new-preroll and new-sample signals","flags":"readable, writable","type":"Boolean","default":"false"},"max-buffers":{"blurb":"The maximum number of buffers to queue internally (0 = unlimited)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"drop":{"blurb":"Drop old buffers when the buffer queue is filled","flags":"readable, writable","type":"Boolean","default":"false"},"wait-on-eos":{"blurb":"Wait for all buffers to be processed after receiving an EOS","flags":"readable, writable","type":"Boolean","default":"true"},"buffer-list":{"blurb":"Use buffer lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpac3depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP AC3 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts AC3 audio from RTP packets (RFC 4184)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"{ (int)32000, (int)44100, (int)48000 }","encoding-name":"AC3","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/ac3":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpac3depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpac3pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP AC3 audio payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload AC3 audio as RTP packets (RFC 4184)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/ac3":{},"audio/x-ac3":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"{ (int)32000, (int)44100, (int)48000 }","encoding-name":"AC3","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpac3pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpbvdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP BroadcomVoice depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts BroadcomVoice audio from RTP packets (RFC 4298)","Author":"Wim Taymans <wim.taymans@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"BV16","media":"audio"},{"clock-rate":"16000","encoding-name":"BV32","media":"audio"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-bv":{"mode":"{ (int)16, (int)32 }"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpbvdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpbvpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP BV Payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Packetize BroadcomVoice audio streams into RTP packets (RFC 4298)","Author":"Wim Taymans <wim.taymans@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-bv":{"mode":"{ (int)16, (int)32 }"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"BV16","media":"audio","payload":"[ 96, 127 ]"},{"clock-rate":"16000","encoding-name":"BV32","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpbvpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpceltdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP CELT depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts CELT audio from RTP packets","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 32000, 48000 ]","encoding-name":"CELT","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-celt":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpceltdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpceltpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP CELT payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes CELT audio into a RTP packet","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-celt":{"channels":"[ 1, 2 ]","frame-size":"[ 64, 512 ]","rate":"[ 32000, 64000 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 32000, 48000 ]","encoding-name":"CELT","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpceltpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpdvdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP DV Depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Depayloads DV from RTP packets (RFC 3189)","Author":"Marcel Moreaux <marcelm@spacelabs.nl>, Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encode":"{ (string)SD-VCR/525-60, (string)SD-VCR/625-50, (string)HD-VCR/1125-60, (string)HD-VCR/1250-50, (string)SDL-VCR/525-60, (string)SDL-VCR/625-50, (string)306M/525-60, (string)306M/625-50, (string)314M-25/525-60, (string)314M-25/625-50, (string)314M-50/525-60, (string)314M-50/625-50 }","encoding-name":"DV","media":"{ (string)video, (string)audio }"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-dv":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpdvdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpdvpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP DV Payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payloads DV into RTP packets (RFC 3189)","Author":"Marcel Moreaux <marcelm@spacelabs.nl>, Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-dv":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encode":"{ (string)SD-VCR/525-60, (string)SD-VCR/625-50, (string)HD-VCR/1125-60, (string)HD-VCR/1250-50, (string)SDL-VCR/525-60, (string)SDL-VCR/625-50, (string)306M/525-60, (string)306M/625-50, (string)314M-25/525-60, (string)314M-25/625-50, (string)314M-50/525-60, (string)314M-50/625-50 }","encoding-name":"DV","media":"{ (string)video, (string)audio }","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpdvpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"mode":{"blurb":"The payload mode of payloading","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"video            - Video only","1":"bundled          - Video and Audio bundled","2":"audio            - Audio only"}}}},{"name":"rtpgstdepay","Factory Details":{"Rank":"marginal (64)","GraphAgentElement":false,"Long-name":"GStreamer depayloader","Klass":"Codec/Depayloader/Network","Description":"Extracts GStreamer buffers from RTP packets","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"X-GST","media":"application"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpgstdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpgstpay","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP GStreamer payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload GStreamer buffers as RTP packets","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"X-GST","media":"application","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpgstpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"config-interval":{"blurb":"Interval for sending caps and TAG events in seconds (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"3600","range_min":"0"}}},{"name":"rtpilbcpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP iLBC Payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Packetize iLBC audio streams into RTP packets","Author":"Philippe Kalaf <philippe.kalaf@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-iLBC":{"mode":"{ (int)20, (int)30 }"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"8000","encoding-name":"ILBC","media":"audio","mode":"{ (string)20, (string)30 }","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpilbcpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpilbcdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP iLBC depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts iLBC audio from RTP packets (RFC 3952)","Author":"Philippe Kalaf <philippe.kalaf@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"8000","encoding-name":"ILBC","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-iLBC":{"mode":"{ (int)20, (int)30 }"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpilbcdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"},"mode":{"blurb":"iLBC frame mode","flags":"readable, writable","type":"Enum","default":"30","choice":{"20":"20ms             - 20ms frames","30":"30ms             - 30ms frames"}}}},{"name":"rtpg722depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts G722 audio from RTP packets","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"G722","media":"audio"},{"clock-rate":"[ 1, 2147483647 ]","media":"audio","payload":"9"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/G722":{"channels":"[ 1, 2147483647 ]","rate":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg722depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpg722pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode Raw audio into RTP packets (RFC 3551)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/G722":{"channels":"1","rate":"16000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"G722","encoding-params":"1","media":"audio","payload":"9"},{"clock-rate":"8000","encoding-name":"G722","encoding-params":"1","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg722pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"9","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpg723depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP G.723 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts G.723 audio from RTP packets (RFC 3551)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"G723","media":"audio"},{"clock-rate":"8000","media":"audio","payload":"4"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/G723":{"channels":"1","rate":"8000"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg723depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpg723pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP G.723 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Packetize G.723 audio into RTP packets","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/G723":{"channels":"1","rate":"8000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"G723","media":"audio","payload":"4"},{"clock-rate":"8000","encoding-name":"G723","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg723pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"4","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpg726depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP G.726 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts G.726 audio from RTP packets","Author":"Axis Communications <dev-gstreamer@axis.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"8000","encoding-name":"{ (string)G726, (string)G726-16, (string)G726-24, (string)G726-32, (string)G726-40, (string)AAL2-G726-16, (string)AAL2-G726-24, (string)AAL2-G726-32, (string)AAL2-G726-40 }","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-adpcm":{"bitrate":"{ (int)16000, (int)24000, (int)32000, (int)40000 }","block_align":"{ (int)2, (int)3, (int)4, (int)5 }","channels":"1","layout":"g726","rate":"8000"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg726depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"},"force-aal2":{"blurb":"Force AAL2 decoding for compatibility with bad payloaders","flags":"readable, writable","type":"Boolean","default":"true"}}},{"name":"rtpg726pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP G.726 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes G.726 audio into a RTP packet","Author":"Axis Communications <dev-gstreamer@axis.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-adpcm":{"bitrate":"{ (int)16000, (int)24000, (int)32000, (int)40000 }","channels":"1","layout":"g726","rate":"8000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"8000","encoding-name":"{ (string)G726-16, (string)G726-24, (string)G726-32, (string)G726-40, (string)AAL2-G726-16, (string)AAL2-G726-24, (string)AAL2-G726-32, (string)AAL2-G726-40 }","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg726pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"},"force-aal2":{"blurb":"Force AAL2 encoding for compatibility with bad depayloaders","flags":"readable, writable","type":"Boolean","default":"true"}}},{"name":"rtpg729depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP G.729 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts G.729 audio from RTP packets (RFC 3551)","Author":"Laurent Glayal <spglegle@yahoo.fr>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"G729","media":"audio"},{"clock-rate":"8000","media":"audio","payload":"18"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/G729":{"channels":"1","rate":"8000"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg729depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpg729pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP G.729 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Packetize G.729 audio into RTP packets","Author":"Olivier Crete <olivier.crete@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/G729":{"channels":"1","rate":"8000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"G729","media":"audio","payload":"18"},{"clock-rate":"8000","encoding-name":"G729","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpg729pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"18","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpgsmdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP GSM depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts GSM audio from RTP packets","Author":"Zeeshan Ali <zeenix@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"GSM","media":"audio"},{"clock-rate":"8000","media":"audio","payload":"3"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-gsm":{"channels":"1","rate":"8000"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpgsmdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpgsmpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP GSM payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes GSM audio into a RTP packet","Author":"Zeeshan Ali <zeenix@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-gsm":{"channels":"1","rate":"8000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"GSM","media":"audio","payload":"3"},{"clock-rate":"8000","encoding-name":"GSM","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpgsmpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"3","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpamrdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP AMR depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts AMR or AMR-WB audio from RTP packets (RFC 3267)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"AMR","media":"audio","octet-align":"1"},{"clock-rate":"16000","encoding-name":"AMR-WB","media":"audio","octet-align":"1"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/AMR":{"channels":"1","rate":"8000"},"audio/AMR-WB":{"channels":"1","rate":"16000"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpamrdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpamrpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP AMR payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode AMR or AMR-WB audio into RTP packets (RFC 3267)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/AMR":{"channels":"1","rate":"8000"},"audio/AMR-WB":{"channels":"1","rate":"16000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","crc":"0","encoding-name":"AMR","encoding-params":"1","interleaving":"0","maxptime":"[ 20, 2147483647 ]","media":"audio","mode-change-neighbor":"{ (string)0, (string)1 }","mode-change-period":"[ 1, 2147483647 ]","mode-set":"[ 0, 7 ]","octet-align":"1","payload":"[ 96, 127 ]","ptime":"[ 20, 2147483647 ]","robust-sorting":"0"},{"clock-rate":"16000","crc":"0","encoding-name":"AMR-WB","encoding-params":"1","interleaving":"0","maxptime":"[ 20, 2147483647 ]","media":"audio","mode-change-neighbor":"{ (string)0, (string)1 }","mode-change-period":"[ 1, 2147483647 ]","mode-set":"[ 0, 7 ]","octet-align":"1","payload":"[ 96, 127 ]","ptime":"[ 20, 2147483647 ]","robust-sorting":"0"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpamrpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtppcmadepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP PCMA depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts PCMA audio from RTP packets","Author":"Edgard Lima <edgard.lima@gmail.com>, Zeeshan Ali <zeenix@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","media":"audio","payload":"8"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"PCMA","media":"audio"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-alaw":{"channels":"1","rate":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtppcmadepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtppcmudepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP PCMU depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts PCMU audio from RTP packets","Author":"Edgard Lima <edgard.lima@gmail.com>, Zeeshan Ali <zeenix@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","media":"audio","payload":"0"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"PCMU","media":"audio"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-mulaw":{"channels":"1","rate":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtppcmudepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtppcmupay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP PCMU payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes PCMU audio into a RTP packet","Author":"Edgard Lima <edgard.lima@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-mulaw":{"channels":"1","rate":"8000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"PCMU","media":"audio","payload":"0"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"PCMU","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtppcmupay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtppcmapay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP PCMA payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes PCMA audio into a RTP packet","Author":"Edgard Lima <edgard.lima@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-alaw":{"channels":"1","rate":"8000"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"PCMA","media":"audio","payload":"8"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"PCMA","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtppcmapay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"8","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmpadepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG audio from RTP packets (RFC 2038)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","media":"audio","payload":"14"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MPA","media":"audio"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/mpeg":{"mpegversion":"1"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmpadepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmpapay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG audio payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload MPEG audio as RTP packets (RFC 2038)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/mpeg":{"mpegversion":"1"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","media":"audio","payload":"14"},{"clock-rate":"90000","encoding-name":"MPA","media":"audio","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmpapay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"14","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmparobustdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG audio from RTP packets (RFC 5219)","Author":"Mark Nauwelaerts <mark.nauwelaerts@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"MPA-ROBUST","media":"audio"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"{ (string)X-MP3-DRAFT-00, (string)X-MP3-DRAFT-01, (string)X-MP3-DRAFT-02, (string)X-MP3-DRAFT-03, (string)X-MP3-DRAFT-04, (string)X-MP3-DRAFT-05, (string)X-MP3-DRAFT-06 }","media":"audio"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/mpeg":{"mpegversion":"1"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmparobustdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmpvdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG video depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG video from RTP packets (RFC 2250)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"MPV","media":"video"},{"clock-rate":"90000","media":"video","payload":"32"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/mpeg":{"mpegversion":"2","systemstream":"false"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmpvdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmpvpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG2 ES video payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes MPEG2 ES into RTP packets (RFC 2250)","Author":"Thijs Vermeir <thijsvermeir@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/mpeg":{"mpegversion":"2","systemstream":"false"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"MPV","media":"video","payload":"32"},{"clock-rate":"90000","encoding-name":"MPV","media":"video","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmpvpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"32","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpopusdepay","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"RTP Opus packet depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts Opus audio from RTP packets","Author":"Danilo Cesar Lemes de Paula <danilo.cesar@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"48000","encoding-name":"{ (string)OPUS, (string)X-GST-OPUS-DRAFT-SPITTKA-00 }","media":"audio","payload":"[ 96, 127 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-opus":{"channel-mapping-family":"0"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpopusdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpopuspay","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"RTP Opus payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Puts Opus audio in RTP packets","Author":"Danilo Cesar Lemes de Paula <danilo.cesar@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-opus":{"channel-mapping-family":"0","channels":"[ 1, 2 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"48000","encoding-name":"{ (string)OPUS, (string)X-GST-OPUS-DRAFT-SPITTKA-00 }","encoding-params":"2","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpopuspay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph261pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H261 packet payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes H261 video in RTP packets (RFC 4587)","Author":"Stian Selnes <stian@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h261":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"H261","media":"video","payload":"31"},{"clock-rate":"90000","encoding-name":"H261","media":"video","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph261pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"31","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph261depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H261 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts H261 video from RTP packets (RFC 4587)","Author":"Stian Selnes <stian@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"H261","media":"video","payload":"31"},{"clock-rate":"90000","encoding-name":"H261","media":"video","payload":"[ 96, 127 ]"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h261":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph261depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph263ppay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H263 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes H263/+/++ video in RTP packets (RFC 4629)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h263":{"variant":"itu"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"H263-1998","media":"video","payload":"[ 96, 127 ]"},{"clock-rate":"90000","encoding-name":"H263-2000","media":"video","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph263ppay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"fragmentation-mode":{"blurb":"Packet Fragmentation Mode","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"normal           - Normal","1":"sync             - Fragment at sync points"}}}},{"name":"rtph263pdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H263 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts H263/+/++ video from RTP packets (RFC 4629)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"H263-1998","media":"video"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"H263-2000","media":"video"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h263":{"variant":"itu"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph263pdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph263depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H263 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts H263 video from RTP packets (RFC 2190)","Author":"Philippe Kalaf <philippe.kalaf@collabora.co.uk>, Edward Hervey <bilboed@bilboed.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","media":"video","payload":"34"},{"clock-rate":"90000","encoding-name":"H263","media":"video"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h263":{"h263version":"h263","variant":"itu"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph263depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph263pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H263 packet payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes H263 video in RTP packets (RFC 2190)","Author":"Neil Stratford <neils@vipadia.com>Dejan Sakelsak <dejan.sakelsak@marand.si>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h263":{"h263version":"h263","variant":"itu"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"H263","media":"video","payload":"34"},{"clock-rate":"90000","encoding-name":"H263","media":"video","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph263pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"34","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"modea-only":{"blurb":"Disable packetization modes B and C","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph264depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H264 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts H264 video from RTP packets (RFC 3984)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"H264","media":"video"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h264":[{"alignment":"au","stream-format":"avc"},{"alignment":"{ (string)nal, (string)au }","stream-format":"byte-stream"}]}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph264depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph264pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H264 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode H264 video into RTP packets (RFC 3984)","Author":"Laurent Glayal <spglegle@yahoo.fr>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h264":[{"alignment":"au","stream-format":"avc"},{"alignment":"{ (string)nal, (string)au }","stream-format":"byte-stream"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"H264","media":"video","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph264pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"sprop-parameter-sets":{"blurb":"The base64 sprop-parameter-sets to set in out caps (set to NULL to extract from stream)","flags":"readable, writable, deprecated","type":"String","default":"null"},"config-interval":{"blurb":"Send SPS and PPS Insertion Interval in seconds (sprop parameter sets will be multiplexed in the data stream when detected.) (0 = disabled, -1 = send with every IDR frame)","flags":"readable, writable","type":"Integer","default":"0","range_max":"3600","range_min":"-1"}}},{"name":"rtph265depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H265 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts H265 video from RTP packets (RFC 7798)","Author":"Jurgen Slowack <jurgenslowack@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"H265","media":"video"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h265":[{"alignment":"au","stream-format":"hvc1"},{"alignment":"{ (string)nal, (string)au }","stream-format":"byte-stream"}]}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph265depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtph265pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP H265 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode H265 video into RTP packets (RFC 7798)","Author":"Jurgen Slowack <jurgenslowack@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h265":[{"alignment":"au","stream-format":"hvc1"},{"alignment":"{ (string)nal, (string)au }","stream-format":"byte-stream"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"H265","media":"video","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtph265pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"config-interval":{"blurb":"Send VPS, SPS and PPS Insertion Interval in seconds (sprop parameter sets will be multiplexed in the data stream when detected.) (0 = disabled, -1 = send with every IDR frame)","flags":"readable, writable","type":"Integer","default":"0","range_max":"3600","range_min":"-1"}}},{"name":"rtpj2kdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP JPEG 2000 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts JPEG 2000 video from RTP packets (RFC 5371)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"JPEG2000","media":"video","sampling":"{ (string)RGB, (string)BGR, (string)RGBA, (string)BGRA, (string)YCbCrA, (string)YCbCr-4:4:4, (string)YCbCr-4:2:2, (string)YCbCr-4:2:0, (string)YCbCr-4:1:1, (string)GRAYSCALE }"},{"clock-rate":"90000","colorspace":"{ (string)sRGB, (string)sYUV, (string)GRAY }","encoding-name":"JPEG2000","media":"video"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"image/x-jpc":{"colorspace":"{ (string)sRGB, (string)sYUV, (string)GRAY }"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpj2kdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpj2kpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP JPEG 2000 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes JPEG 2000 pictures into RTP packets (RFC 5371)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"image/x-jpc":{"sampling":"{ (string)RGB, (string)BGR, (string)RGBA, (string)BGRA, (string)YCbCrA, (string)YCbCr-4:4:4, (string)YCbCr-4:2:2, (string)YCbCr-4:2:0, (string)YCbCr-4:1:1, (string)GRAYSCALE }"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"JPEG2000","media":"video","payload":"[ 96, 127 ]","sampling":"{ (string)RGB, (string)BGR, (string)RGBA, (string)BGRA, (string)YCbCrA, (string)YCbCr-4:4:4, (string)YCbCr-4:2:2, (string)YCbCr-4:2:0, (string)YCbCr-4:1:1, (string)GRAYSCALE }"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpj2kpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpjpegdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP JPEG depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts JPEG video from RTP packets (RFC 2435)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"JPEG","media":"video"},{"clock-rate":"90000","media":"video","payload":"26"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"image/jpeg":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpjpegdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpjpegpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP JPEG payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes JPEG pictures into RTP packets (RFC 2435)","Author":"Axis Communications <dev-gstreamer@axis.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"image/jpeg":{},"video/x-jpeg":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"JPEG","height":"[ 1, 65536 ]","media":"video","payload":"26","width":"[ 1, 65536 ]"},{"clock-rate":"90000","encoding-name":"JPEG","height":"[ 1, 65536 ]","media":"video","payload":"[ 96, 127 ]","width":"[ 1, 65536 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpjpegpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"26","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"quality":{"blurb":"Quality factor on JPEG data (unused)","flags":"readable, writable","type":"Integer","default":"255","range_max":"255","range_min":"0"},"type":{"blurb":"Default JPEG Type, overwritten by SOF when present","flags":"readable, writable","type":"Integer","default":"1","range_max":"255","range_min":"0"}}},{"name":"rtpklvdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP KLV Depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts KLV (SMPTE ST 336) metadata from RTP packets","Author":"Tim-Philipp Müller <tim@centricular.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"SMPTE336M","media":"application"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"meta/x-klv":{"parsed":"true"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpklvdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpklvpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP KLV Payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payloads KLV (SMPTE ST 336) metadata as RTP packets","Author":"Tim-Philipp Müller <tim@centricular.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"meta/x-klv":{"parsed":"true"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"SMPTE336M","media":"application"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpklvpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpL8pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode Raw audio into RTP packets (RFC 3551)","Author":"Wim Taymans <wim.taymans@gmail.com>, GE Intelligent Platforms Embedded Systems, Inc.","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-raw":{"channels":"[ 1, 2147483647 ]","format":"U8","layout":"interleaved","rate":"[ 1, 2147483647 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"channels":"[ 1, 2147483647 ]","clock-rate":"[ 1, 2147483647 ]","encoding-name":"L8","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpL8pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpL8depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts raw audio from RTP packets","Author":"Zeeshan Ali <zak147@yahoo.com>,Wim Taymans <wim.taymans@gmail.com>, GE Intelligent Platforms Embedded Systems, Inc.","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"L8","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-raw":{"channels":"[ 1, 2147483647 ]","format":"U8","layout":"interleaved","rate":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpL8depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpL16pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode Raw audio into RTP packets (RFC 3551)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-raw":{"channels":"[ 1, 2147483647 ]","format":"S16BE","layout":"interleaved","rate":"[ 1, 2147483647 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"channels":"[ 1, 2147483647 ]","clock-rate":"[ 1, 2147483647 ]","encoding-name":"L16","media":"audio","payload":"[ 96, 127 ]"},{"clock-rate":"44100","encoding-name":"L16","media":"audio","payload":"10"},{"clock-rate":"44100","encoding-name":"L16","media":"audio","payload":"11"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpL16pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpL16depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts raw audio from RTP packets","Author":"Zeeshan Ali <zak147@yahoo.com>,Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"L16","media":"audio"},{"clock-rate":"[ 1, 2147483647 ]","media":"audio","payload":"{ (int)10, (int)11 }"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-raw":{"channels":"[ 1, 2147483647 ]","format":"S16BE","layout":"interleaved","rate":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpL16depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpL24pay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode Raw 24-bit audio into RTP packets (RFC 3190)","Author":"Wim Taymans <wim.taymans@gmail.com>,David Holroyd <dave@badgers-in-foil.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-raw":{"channels":"[ 1, 2147483647 ]","format":"S24BE","layout":"interleaved","rate":"[ 1, 2147483647 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"channels":"[ 1, 2147483647 ]","clock-rate":"[ 1, 2147483647 ]","encoding-name":"L24","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpL24pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpL24depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts raw 24-bit audio from RTP packets","Author":"Zeeshan Ali <zak147@yahoo.com>,Wim Taymans <wim.taymans@gmail.com>,David Holroyd <dave@badgers-in-foil.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"L24","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-raw":{"channels":"[ 1, 2147483647 ]","format":"S24BE","layout":"interleaved","rate":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpL24depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"asteriskh263","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Asterisk H263 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts H263 video from RTP and encodes in Asterisk H263 format","Author":"Neil Stratford <neils@vipadia.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"H263-1998","media":"video","payload":"[ 96, 127 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-asteriskh263":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_asteriskh263"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"}}},{"name":"rtpmp1sdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG1 System Stream depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG1 System Streams from RTP packets (RFC 3555)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MP1S","media":"other"},{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MP1S","media":"video"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/mpeg":{"systemstream":"true"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp1sdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmp2tdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG Transport Stream depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG2 TS from RTP packets (RFC 2250)","Author":"Wim Taymans <wim.taymans@gmail.com>, Thijs Vermeir <thijs.vermeir@barco.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"{ (string)MP2T, (string)MP2T-ES }","media":"video"},{"clock-rate":"[ 1, 2147483647 ]","media":"video","payload":"33"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/mpegts":{"packetsize":"188","systemstream":"true"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp2tdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"},"skip-first-bytes":{"blurb":"The amount of bytes that need to be skipped at the beginning of the payload","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"rtpmp2tpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG2 Transport Stream payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes MPEG2 TS into RTP packets (RFC 2250)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/mpegts":{"packetsize":"188","systemstream":"true"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"90000","encoding-name":"MP2T","media":"video","payload":"33"},{"clock-rate":"90000","encoding-name":"MP2T","media":"video","payload":"[ 96, 127 ]"}]}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp2tpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"33","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmp4vpay","Factory Details":{"Rank":"secondary + 1 (129)","GraphAgentElement":false,"Long-name":"RTP MPEG4 Video payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload MPEG-4 video as RTP packets (RFC 3016)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/mpeg":{"mpegversion":"4","systemstream":"false"},"video/x-divx":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MP4V-ES","media":"video","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp4vpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"config-interval":{"blurb":"Send Config Insertion Interval in seconds (configuration headers will be multiplexed in the data stream when detected.) (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"3600","range_min":"0"}}},{"name":"rtpmp4vdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG4 video depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG4 video from RTP packets (RFC 3016)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MP4V-ES","media":"video"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/mpeg":{"mpegversion":"4","systemstream":"false"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp4vdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmp4apay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG4 audio payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload MPEG4 audio as RTP packets (RFC 3016)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/mpeg":{"mpegversion":"4","stream-format":"raw"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MP4A-LATM","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp4apay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmp4adepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG4 audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG4 audio from RTP packets (RFC 3016)","Author":"Nokia Corporation (contact <stefan.kost@nokia.com>), Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MP4A-LATM","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/mpeg":{"framed":"{ (boolean)false, (boolean)true }","mpegversion":"4","stream-format":"raw"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp4adepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmp4gdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG4 ES depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts MPEG4 elementary streams from RTP packets (RFC 3640)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MPEG4-GENERIC","media":"{ (string)video, (string)audio, (string)application }","mode":"{ (string)generic, (string)CELP-cbr, (string)CELP-vbr, (string)AAC-lbr, (string)AAC-hbr }"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/mpeg":{"mpegversion":"4","stream-format":"raw"},"video/mpeg":{"mpegversion":"4","systemstream":"false"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp4gdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpmp4gpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP MPEG4 ES payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload MPEG4 elementary streams as RTP packets (RFC 3640)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/mpeg":{"mpegversion":"4","stream-format":"raw"},"video/mpeg":{"mpegversion":"4","systemstream":"false"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"MPEG4-GENERIC","media":"{ (string)video, (string)audio, (string)application }","mode":"{ (string)generic, (string)CELP-cbr, (string)CELP-vbr, (string)AAC-lbr, (string)AAC-hbr }","payload":"[ 96, 127 ]","streamtype":"{ (string)4, (string)5 }"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmp4gpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpqcelpdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP QCELP depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts QCELP (PureVoice) audio from RTP packets (RFC 2658)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":[{"clock-rate":"8000","encoding-name":"QCELP","media":"audio"},{"clock-rate":"8000","media":"audio","payload":"12"}]}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/qcelp":{"channels":"1","rate":"8000"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpqcelpdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpqdm2depay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP QDM2 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts QDM2 audio from RTP packets (no RFC)","Author":"Edward Hervey <bilboed@bilboed.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"encoding-name":"X-QDM","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-qdm2":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpqdm2depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpsbcdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP SBC audio depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts SBC audio from RTP packets","Author":"Arun Raghavan <arun.raghavan@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"{ (int)16000, (int)32000, (int)44100, (int)48000 }","encoding-name":"SBC","media":"audio","payload":"[ 96, 127 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-sbc":{"allocation-method":"{ (string)snr, (string)loudness }","bitpool":"[ 2, 64 ]","blocks":"{ (int)4, (int)8, (int)12, (int)16 }","channels":"[ 1, 2 ]","mode":"{ (string)mono, (string)dual, (string)stereo, (string)joint }","rate":"{ (int)16000, (int)32000, (int)44100, (int)48000 }","subbands":"{ (int)4, (int)8 }"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpsbcdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"},"ignore-timestamps":{"blurb":"Various statistics","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpsbcpay","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP packet payloader","Klass":"Codec/Payloader/Network","Description":"Payload SBC audio as RTP packets","Author":"Thiago Sousa Santos <thiagoss@lcc.ufcg.edu.br>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-sbc":{"allocation-method":"{ (string)snr, (string)loudness }","bitpool":"[ 2, 64 ]","blocks":"{ (int)4, (int)8, (int)12, (int)16 }","channel-mode":"{ (string)mono, (string)dual, (string)stereo, (string)joint }","channels":"[ 1, 2 ]","rate":"{ (int)16000, (int)32000, (int)44100, (int)48000 }","subbands":"{ (int)4, (int)8 }"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"{ (int)16000, (int)32000, (int)44100, (int)48000 }","encoding-name":"SBC","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpsbcpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"min-frames":{"blurb":"Minimum quantity of frames to send in one packet (-1 for maximum allowed by the mtu)","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-1"}}},{"name":"rtpsirenpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Payloader for Siren Audio","Klass":"Codec/Payloader/Network/RTP","Description":"Packetize Siren audio streams into RTP packets","Author":"Youness Alaoui <kakaroto@kakaroto.homelinux.net>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-siren":{"dct-length":"320"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"bitrate":"16000","clock-rate":"16000","dct-length":"320","encoding-name":"SIREN","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpsirenpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-list":{"blurb":"Use Buffer Lists","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpsirendepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Siren packet depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts Siren audio from RTP packets","Author":"Philippe Kalaf <philippe.kalaf@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"16000","encoding-name":"SIREN","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-siren":{"dct-length":"320"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpsirendepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpspeexpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Speex payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encodes Speex audio into a RTP packet","Author":"Edgard Lima <edgard.lima@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-speex":{"channels":"1","rate":"[ 6000, 48000 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 6000, 48000 ]","encoding-name":"SPEEX","encoding-params":"1","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpspeexpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"110","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpspeexdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Speex depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts Speex audio from RTP packets","Author":"Edgard Lima <edgard.lima@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 6000, 48000 ]","encoding-name":"SPEEX","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-speex":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpspeexdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpsv3vdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP SVQ3 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts SVQ3 video from RTP packets (no RFC)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"{ (string)X-SV3V-ES, (string)X-SORENSON-VIDEO, (string)X-SORENSONVIDEO, (string)X-SorensonVideo }","media":"video"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-svq":{"svqversion":"3"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpsv3vdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtptheoradepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Theora depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts Theora video from RTP packets (draft-01 of RFC XXXX)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"THEORA","media":"video"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-theora":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtptheoradepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtptheorapay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Theora payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode Theora video into RTP packets (draft-01 RFC XXXX)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-theora":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"THEORA","media":"video","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtptheorapay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"config-interval":{"blurb":"Send Config Insertion Interval in seconds (configuration headers will be multiplexed in the data stream when detected.) (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"3600","range_min":"0"}}},{"name":"rtpvorbisdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Vorbis depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts Vorbis Audio from RTP packets (RFC 5215)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"VORBIS","media":"audio"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"audio/x-vorbis":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvorbisdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpvorbispay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Vorbis payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload-encode Vorbis audio into RTP packets (RFC 5215)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"audio/x-vorbis":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]","encoding-name":"VORBIS","media":"audio","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvorbispay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"config-interval":{"blurb":"Send Config Insertion Interval in seconds (configuration headers will be multiplexed in the data stream when detected.) (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"3600","range_min":"0"}}},{"name":"rtpvp8depay","Factory Details":{"Rank":"marginal (64)","GraphAgentElement":false,"Long-name":"RTP VP8 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts VP8 video from RTP packets)","Author":"Sjoerd Simons <sjoerd@luon.net>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"{ (string)VP8, (string)VP8-DRAFT-IETF-01 }","media":"video"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-vp8":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvp8depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpvp8pay","Factory Details":{"Rank":"marginal (64)","GraphAgentElement":false,"Long-name":"RTP VP8 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Puts VP8 video in RTP packets","Author":"Sjoerd Simons <sjoerd@luon.net>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-vp8":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"{ (string)VP8, (string)VP8-DRAFT-IETF-01 }","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvp8pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"picture-id-mode":{"blurb":"The picture ID mode for payloading","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"none             - No Picture ID","1":"7-bit            - 7-bit Picture ID","2":"15-bit           - 15-bit Picture ID"}}}},{"name":"rtpvp9depay","Factory Details":{"Rank":"marginal (64)","GraphAgentElement":false,"Long-name":"RTP VP9 depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts VP9 video from RTP packets)","Author":"Stian Selnes <stian@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"{ (string)VP9, (string)VP9-DRAFT-IETF-01 }","media":"video"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-vp9":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvp9depay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpvp9pay","Factory Details":{"Rank":"marginal (64)","GraphAgentElement":false,"Long-name":"RTP VP9 payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Puts VP9 video in RTP packets)","Author":"Stian Selnes <stian@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-vp9":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","encoding-name":"{ (string)VP9, (string)VP9-DRAFT-IETF-01 }","payload":"[ 96, 127 ]"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvp9pay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"picture-id-mode":{"blurb":"The picture ID mode for payloading","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"none             - No Picture ID","1":"7-bit            - 7-bit Picture ID","2":"15-bit           - 15-bit Picture ID"}}}},{"name":"rtpvrawdepay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Raw Video depayloader","Klass":"Codec/Depayloader/Network/RTP","Description":"Extracts raw video from RTP packets (RFC 4175)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","depth":"{ (string)8, (string)10, (string)12, (string)16 }","encoding-name":"RAW","media":"video","sampling":"{ (string)RGB, (string)RGBA, (string)BGR, (string)BGRA, (string)YCbCr-4:4:4, (string)YCbCr-4:2:2, (string)YCbCr-4:2:0, (string)YCbCr-4:1:1 }"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-raw":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvrawdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Add RTP source information as buffer meta","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpvrawpay","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"RTP Raw Video payloader","Klass":"Codec/Payloader/Network/RTP","Description":"Payload raw video as RTP packets (RFC 4175)","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-raw":{"format":"{ (string)RGB, (string)RGBA, (string)BGR, (string)BGRA, (string)AYUV, (string)UYVY, (string)I420, (string)Y41B, (string)UYVP }","height":"[ 1, 32767 ]","width":"[ 1, 32767 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"90000","colorimetry":"{ (string)BT601-5, (string)BT709-2, (string)SMPTE240M }","depth":"{ (string)8, (string)10, (string)12, (string)16 }","encoding-name":"RAW","media":"video","payload":"[ 96, 127 ]","sampling":"{ (string)RGB, (string)RGBA, (string)BGR, (string)BGRA, (string)YCbCr-4:4:4, (string)YCbCr-4:2:2, (string)YCbCr-4:2:0, (string)YCbCr-4:1:1 }"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpvrawpay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"mtu":{"blurb":"Maximum size of one packet","flags":"readable, writable","type":"Unsigned Integer","default":"1400","range_max":"4294967295","range_min":"28"},"pt":{"blurb":"The payload type of the packets","flags":"readable, writable","type":"Unsigned Integer","default":"96","range_max":"127","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (default = random)","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"65535","range_min":"-1"},"max-ptime":{"blurb":"Maximum duration of the packet data in ns (-1 = unlimited up to MTU)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"min-ptime":{"blurb":"Minimum duration of the packet data in ns (can't go above MTU)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"timestamp":{"blurb":"The RTP timestamp of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"65535","range_min":"0"},"perfect-rtptime":{"blurb":"Generate perfect RTP timestamps when possible","flags":"readable, writable","type":"Boolean","default":"true"},"ptime-multiple":{"blurb":"Force buffers to be multiples of this duration in ns (0 disables)","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"source-info":{"blurb":"Write CSRC based on buffer meta RTP source information","flags":"readable, writable","type":"Boolean","default":"false"},"onvif-no-rate-control":{"blurb":"Enable ONVIF Rate-Control=no timestamping mode","flags":"readable, writable","type":"Boolean","default":"false"},"chunks-per-frame":{"blurb":"Split and send out each frame in multiple chunks to reduce overhead","flags":"readable, writable","type":"Integer","default":"10","range_max":"2147483647","range_min":"1"}}},{"name":"rtpstreampay","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Stream Payloading","Klass":"Codec/Payloader/Network","Description":"Payloads RTP/RTCP packets for streaming protocols according to RFC4571","Author":"Sebastian Dröge <sebastian@centricular.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtcp":{},"application/x-rtp":{},"application/x-srtcp":{},"application/x-srtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtcp-stream":{},"application/x-rtp-stream":{},"application/x-srtcp-stream":{},"application/x-srtp-stream":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpstreampay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"}}},{"name":"rtpstreamdepay","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Stream Depayloading","Klass":"Codec/Depayloader/Network","Description":"Depayloads RTP/RTCP packets for streaming protocols according to RFC4571","Author":"Sebastian Dröge <sebastian@centricular.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtcp-stream":{},"application/x-rtp-stream":{},"application/x-srtcp-stream":{},"application/x-srtp-stream":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtcp":{},"application/x-rtp":{},"application/x-srtcp":{},"application/x-srtp":{}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpstreamdepay"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"rtpredenc","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Redundant Audio Data (RED) Encoder","Klass":"Codec/Payloader/Network/RTP","Description":"Encode Redundant Audio Data (RED)","Author":"Hani Mustafa <hani@pexip.com>, Mikhail Fludkov <misha@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpredenc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"pt":{"blurb":"Payload type FEC packets (-1 disable)","flags":"readable, writable","type":"Integer","default":"0","range_max":"127","range_min":"0"},"sent":{"blurb":"Count of sent packets","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"distance":{"blurb":"Tells which media packet to use as a redundant block (0 - no redundant blocks, 1 to use previous packet, 2 to use the packet before previous, etc.)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"allow-no-red-blocks":{"blurb":"true - can produce RED packets even without redundant blocks (distance==0) false - RED packets will be produced only if distance>0","flags":"readable, writable","type":"Boolean","default":"true"}}},{"name":"rtpreddec","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Redundant Audio Data (RED) Decoder","Klass":"Codec/Depayloader/Network/RTP","Description":"Decode Redundant Audio Data (RED)","Author":"Hani Mustafa <hani@pexip.com>, Mikhail Fludkov <misha@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpreddec"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"pt":{"blurb":"Payload type FEC packets","flags":"readable, writable","type":"Integer","default":"-1","range_max":"127","range_min":"-1"},"received":{"blurb":"Count of received packets","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"rtpulpfecdec","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP FEC Decoder","Klass":"Codec/Depayloader/Network/RTP","Description":"Decodes RTP FEC (RFC5109)","Author":"Mikhail Fludkov <misha@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpulpfecdec"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"pt":{"blurb":"FEC packets payload type","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"127","range_min":"0"},"storage":{"blurb":"RTP storage","flags":"readable, writable","type":"Object of type GObject"},"recovered":{"blurb":"The number of recovered packets","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"unrecovered":{"blurb":"The number of unrecovered packets","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"rtpulpfecenc","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP FEC Encoder","Klass":"Codec/Payloader/Network/RTP","Description":"Encodes RTP FEC (RFC5109)","Author":"Mikhail Fludkov <misha@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpulpfecenc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"pt":{"blurb":"The payload type of FEC packets","flags":"readable, writable","type":"Unsigned Integer","default":"255","range_max":"255","range_min":"0"},"multipacket":{"blurb":"Apply FEC on multiple packets","flags":"readable, writable","type":"Boolean","default":"true"},"protected":{"blurb":"Count of protected packets","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"percentage":{"blurb":"FEC overhead percentage for the whole stream","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"100","range_min":"0"},"percentage-important":{"blurb":"FEC overhead percentage for important packets","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"100","range_min":"0"}}},{"name":"rtpstorage","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP storage","Klass":"Analyzer/RTP","Description":"Helper element for various purposes (ex. recovering from packet loss using RED/FEC). Saves given number of RTP packets. Should be instantiated before jitterbuffer","Author":"Mikhail Fludkov <misha@pexip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtp","Description":"Real-time protocol plugins","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpstorage"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"size-time":{"blurb":"The amount of data to keep in the storage (in ns, 0-disable)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"internal-storage":{"blurb":"Internal RtpStorage object","flags":"readable","type":"Object of type GObject"}}},{"name":"shmsrc","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Shared Memory Source","Klass":"Source","Description":"Receive data from the shared memory sink","Author":"Olivier Crete <olivier.crete@collabora.co.uk>","Classification":"Input"},"Plugin Details":{"Name":"shm","Description":"shared memory sink source","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstshm.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_shmsrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"blocksize":{"blurb":"Size in bytes to read per buffer (-1 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"num-buffers":{"blurb":"Number of buffers to output before sending EOS (-1 = unlimited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"typefind":{"blurb":"Run typefind before negotiating (deprecated, non-functional)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-timestamp":{"blurb":"Apply current stream time to buffers","flags":"readable, writable","type":"Boolean","default":"false"},"socket-path":{"blurb":"The path to the control socket used to control the shared memory","flags":"readable, writable","type":"String","default":"null"},"is-live":{"blurb":"True if the element cannot produce data in PAUSED","flags":"readable, writable","type":"Boolean","default":"false"},"shm-area-name":{"blurb":"The name of the shared memory area used to get buffers","flags":"readable","type":"String","default":"null"}}},{"name":"shmsink","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Shared Memory Sink","Klass":"Sink","Description":"Send data over shared memory to the matching source","Author":"Olivier Crete <olivier.crete@collabora.co.uk>","Classification":"Output"},"Plugin Details":{"Name":"shm","Description":"shared memory sink source","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstshm.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_shmsink"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"sync":{"blurb":"Sync on the clock","flags":"readable, writable","type":"Boolean","default":"true"},"max-lateness":{"blurb":"Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"qos":{"blurb":"Generate Quality-of-Service events upstream","flags":"readable, writable","type":"Boolean","default":"false"},"async":{"blurb":"Go asynchronously to PAUSED","flags":"readable, writable","type":"Boolean","default":"true"},"ts-offset":{"blurb":"Timestamp offset in nanoseconds","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"enable-last-sample":{"blurb":"Enable the last-sample property","flags":"readable, writable","type":"Boolean","default":"true"},"last-sample":{"blurb":"The last sample received in the sink","flags":"readable","type":"Boxed pointer of type GstSample"},"blocksize":{"blurb":"Size in bytes to pull per buffer (0 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"render-delay":{"blurb":"Additional render delay of the sink in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"throttle-time":{"blurb":"The time to keep between rendered buffers (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-bitrate":{"blurb":"The maximum bits per second to render (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"processing-deadline":{"blurb":"Maximum processing deadline in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"20000000","range_max":"18446744073709551615","range_min":"0"},"socket-path":{"blurb":"The path to the control socket used to control the shared memory transport. This may be modified during the NULL->READY transition","flags":"readable, writable","type":"String","default":"null"},"perms":{"blurb":"Permissions to set on the shm area","flags":"readable, writable","type":"Unsigned Integer","default":"416","range_max":"4095","range_min":"0"},"shm-size":{"blurb":"Size of the shared memory area","flags":"readable, writable","type":"Unsigned Integer","default":"67108864","range_max":"4294967295","range_min":"0"},"wait-for-connection":{"blurb":"Block the stream until the shm pipe is connected","flags":"readable, writable","type":"Boolean","default":"true"},"buffer-time":{"blurb":"Maximum Size of the shm buffer in nanoseconds (-1 to disable)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"}}},{"name":"rtspsrc","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTSP packet receiver","Klass":"Source/Network","Description":"Receive data over the network via RTSP (RFC 2326)","Author":"Wim Taymans <wim@fluendo.com>, Thijs Vermeir <thijs.vermeir@barco.com>, Lutz Mueller <lutz@topfrose.de>","Classification":"Input"},"Plugin Details":{"Name":"rtsp","Description":"transfer data via RTSP","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtsp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"stream_%u","Availability":"Sometimes","Capabilities":{"application/x-rdt":{},"application/x-rtp":{}}}]},"Pads":null,"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtspsrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"async-handling":{"blurb":"The bin will handle Asynchronous state changes","flags":"readable, writable","type":"Boolean","default":"false"},"message-forward":{"blurb":"Forwards all children messages","flags":"readable, writable","type":"Boolean","default":"false"},"location":{"blurb":"Location of the RTSP url to read","flags":"readable, writable","type":"String","default":"null"},"protocols":{"blurb":"Allowed lower transport protocols","flags":"readable, writable","type":"Flags","default":"0x00000007","choice":{"0x00000000":"unknown          - GST_RTSP_LOWER_TRANS_UNKNOWN","0x00000001":"udp              - GST_RTSP_LOWER_TRANS_UDP","0x00000002":"udp-mcast        - GST_RTSP_LOWER_TRANS_UDP_MCAST","0x00000004":"tcp              - GST_RTSP_LOWER_TRANS_TCP","0x00000010":"http             - GST_RTSP_LOWER_TRANS_HTTP","0x00000020":"tls              - GST_RTSP_LOWER_TRANS_TLS"}},"debug":{"blurb":"Dump request and response messages to stdout(DEPRECATED: Printed all RTSP message to gstreamer log as 'log' level)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"retry":{"blurb":"Max number of retries when allocating RTP ports.","flags":"readable, writable","type":"Unsigned Integer","default":"20","range_max":"65535","range_min":"0"},"timeout":{"blurb":"Retry TCP transport after UDP timeout microseconds (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"5000000","range_max":"18446744073709551615","range_min":"0"},"tcp-timeout":{"blurb":"Fail after timeout microseconds on TCP connections (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"20000000","range_max":"18446744073709551615","range_min":"0"},"latency":{"blurb":"Amount of ms to buffer","flags":"readable, writable","type":"Unsigned Integer","default":"2000","range_max":"4294967295","range_min":"0"},"drop-on-latency":{"blurb":"Tells the jitterbuffer to never exceed the given latency in size","flags":"readable, writable","type":"Boolean","default":"false"},"connection-speed":{"blurb":"Network connection speed in kbps (0 = unknown)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551","range_min":"0"},"nat-method":{"blurb":"Method to use for traversing firewalls and NAT","flags":"readable, writable","type":"Enum","default":"1","choice":{"0":"none             - None","1":"dummy            - Send Dummy packets"}},"do-rtcp":{"blurb":"Send RTCP packets, disable for old incompatible server.","flags":"readable, writable","type":"Boolean","default":"true"},"do-rtsp-keep-alive":{"blurb":"Send RTSP keep alive packets, disable for old incompatible server.","flags":"readable, writable","type":"Boolean","default":"true"},"proxy":{"blurb":"Proxy settings for HTTP tunneling. Format: [http://][user:passwd@]host[:port]","flags":"readable, writable","type":"String","default":"null"},"proxy-id":{"blurb":"HTTP proxy URI user id for authentication","flags":"readable, writable","type":"String","default":"null"},"proxy-pw":{"blurb":"HTTP proxy URI user password for authentication","flags":"readable, writable","type":"String","default":"null"},"rtp-blocksize":{"blurb":"RTP package size to suggest to server (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"65536","range_min":"0"},"user-id":{"blurb":"RTSP location URI user id for authentication","flags":"readable, writable","type":"String","default":"null"},"user-pw":{"blurb":"RTSP location URI user password for authentication","flags":"readable, writable","type":"String","default":"null"},"buffer-mode":{"blurb":"Control the buffering algorithm in use","flags":"readable, writable","type":"Enum","default":"3","choice":{"0":"none             - Only use RTP timestamps","1":"slave            - Slave receiver to sender clock","2":"buffer           - Do low/high watermark buffering","3":"auto             - Choose mode depending on stream live","4":"synced           - Synchronized sender and receiver clocks"}},"port-range":{"blurb":"Client port range that can be used to receive RTP and RTCP data, eg. 3000-3005 (NULL = no restrictions)","flags":"readable, writable","type":"String","default":"null"},"udp-buffer-size":{"blurb":"Size of the kernel UDP receive buffer in bytes, 0=default","flags":"readable, writable","type":"Integer","default":"524288","range_max":"2147483647","range_min":"0"},"short-header":{"blurb":"Only send the basic RTSP headers for broken encoders","flags":"readable, writable","type":"Boolean","default":"false"},"probation":{"blurb":"Consecutive packet sequence numbers to accept the source","flags":"readable, writable","type":"Unsigned Integer","default":"2","range_max":"4294967295","range_min":"0"},"udp-reconnect":{"blurb":"Reconnect to the server if RTSP connection is closed when doing UDP","flags":"readable, writable","type":"Boolean","default":"true"},"multicast-iface":{"blurb":"The network interface on which to join the multicast group","flags":"readable, writable","type":"String","default":"null"},"ntp-sync":{"blurb":"Synchronize received streams to the NTP clock","flags":"readable, writable","type":"Boolean","default":"false"},"use-pipeline-clock":{"blurb":"Use the pipeline running-time to set the NTP time in the RTCP SR messages(DEPRECATED: Use ntp-time-source property)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"sdes":{"blurb":"The SDES items of this session","flags":"readable, writable","type":"Boxed pointer of type GstStructure"},"tls-validation-flags":{"blurb":"TLS certificate validation flags used to validate the server certificate","flags":"readable, writable","type":"Flags","default":"0x0000007f","choice":{"0x00000001":"unknown-ca       - G_TLS_CERTIFICATE_UNKNOWN_CA","0x00000002":"bad-identity     - G_TLS_CERTIFICATE_BAD_IDENTITY","0x00000004":"not-activated    - G_TLS_CERTIFICATE_NOT_ACTIVATED","0x00000008":"expired          - G_TLS_CERTIFICATE_EXPIRED","0x00000010":"revoked          - G_TLS_CERTIFICATE_REVOKED","0x00000020":"insecure         - G_TLS_CERTIFICATE_INSECURE","0x00000040":"generic-error    - G_TLS_CERTIFICATE_GENERIC_ERROR","0x0000007f":"validate-all     - G_TLS_CERTIFICATE_VALIDATE_ALL"}},"tls-database":{"blurb":"TLS database with anchor certificate authorities used to validate the server certificate","flags":"readable, writable","type":"Object of type GTlsDatabase"},"tls-interaction":{"blurb":"A GTlsInteraction object to promt the user for password or certificate","flags":"readable, writable","type":"Object of type GTlsInteraction"},"do-retransmission":{"blurb":"Ask the server to retransmit lost packets","flags":"readable, writable","type":"Boolean","default":"true"},"ntp-time-source":{"blurb":"NTP time source for RTCP packets","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"ntp              - NTP time based on realtime clock","1":"unix             - UNIX time based on realtime clock","2":"running-time     - Running time based on pipeline clock","3":"clock-time       - Pipeline clock time"}},"user-agent":{"blurb":"The User-Agent string to send to the server","flags":"readable, writable","type":"String","default":"GStreamer/1.16.2"},"max-rtcp-rtp-time-diff":{"blurb":"Maximum amount of time in ms that the RTP time in RTCP SRs is allowed to be ahead (-1 disabled)","flags":"readable, writable","type":"Integer","default":"1000","range_max":"2147483647","range_min":"-1"},"rfc7273-sync":{"blurb":"Synchronize received streams to the RFC7273 clock (requires clock and offset to be provided)","flags":"readable, writable","type":"Boolean","default":"false"},"max-ts-offset-adjustment":{"blurb":"The maximum number of nanoseconds per frame that time stamp offsets may be adjusted (0 = no limit).","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-ts-offset":{"blurb":"The maximum absolute value of the time offset in (nanoseconds). Note, if the ntp-sync parameter is set the default value is changed to 0 (no limit)","flags":"readable, writable","type":"Integer64","default":"3000000000","range_max":"9223372036854775807","range_min":"0"},"default-rtsp-version":{"blurb":"The RTSP version that should be tried first when negotiating version.","flags":"readable, writable","type":"Enum","default":"16","choice":{"0":"invalid          - GST_RTSP_VERSION_INVALID","16":"1-0              - GST_RTSP_VERSION_1_0","17":"1-1              - GST_RTSP_VERSION_1_1","32":"2-0              - GST_RTSP_VERSION_2_0"}},"backchannel":{"blurb":"The type of backchannel to setup. Default is 'none'.","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"none             - No backchannel","1":"onvif            - ONVIF audio backchannel"}},"teardown-timeout":{"blurb":"When transitioning PAUSED-READY, allow up to timeout (in nanoseconds) delay in order to send teardown (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"100000000","range_max":"18446744073709551615","range_min":"0"}}},{"name":"rtpdec","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Decoder","Klass":"Codec/Parser/Network","Description":"Accepts raw RTP and RTCP packets and sends them forward","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Parser"},"Plugin Details":{"Name":"rtsp","Description":"transfer data via RTSP","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtsp.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"recv_rtp_sink_%u","Availability":"On request","Capabilities":{"application/x-rtp":{}}},{"padname":"recv_rtcp_sink_%u","Availability":"On request","Capabilities":{"application/x-rtcp":{}}}],"SRC template":[{"padname":"recv_rtp_src_%u_%u_%u","Availability":"Sometimes","Capabilities":{"application/x-rtp":{}}},{"padname":"rtcp_src_%u","Availability":"On request","Capabilities":{"application/x-rtcp":{}}}]},"Pads":null,"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpdec"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"latency":{"blurb":"Amount of ms to buffer","flags":"readable, writable","type":"Unsigned Integer","default":"200","range_max":"4294967295","range_min":"0"}}},{"name":"v4l2src","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"Video (video4linux2) Source","Klass":"Source/Video","Description":"Reads frames from a Video4Linux2 device","Author":"Edgard Lima <edgard.lima@gmail.com>, Stefan Kost <ensonic@users.sf.net>","Classification":"Input"},"Plugin Details":{"Name":"video4linux2","Description":"elements for Video 4 Linux","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideo4linux2.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"image/jpeg":{},"video/mpeg":[{"mpegversion":"4","systemstream":"false"},{"mpegversion":"{ (int)1, (int)2 }"}],"video/mpegts":{"systemstream":"true"},"video/x-bayer":{"format":"{ (string)bggr, (string)gbrg, (string)grbg, (string)rggb }","framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-dv":{"systemstream":"true"},"video/x-fwht":{},"video/x-h263":{"variant":"itu"},"video/x-h264":{"alignment":"au","stream-format":"{ (string)byte-stream, (string)avc }"},"video/x-h265":{"alignment":"au","stream-format":"byte-stream"},"video/x-pwc1":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-pwc2":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-raw":{"format":"{ (string)RGB16, (string)BGR, (string)RGB, (string)GRAY8, (string)GRAY16_LE, (string)GRAY16_BE, (string)YVU9, (string)YV12, (string)YUY2, (string)YVYU, (string)UYVY, (string)Y42B, (string)Y41B, (string)YUV9, (string)NV12_64Z32, (string)NV24, (string)NV61, (string)NV16, (string)NV21, (string)NV12, (string)I420, (string)BGRA, (string)BGRx, (string)ARGB, (string)xRGB, (string)BGR15, (string)RGB15 }","framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-sonix":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-vp8":{},"video/x-vp9":{},"video/x-wmv":{"format":"WVC1","wmvversion":"3"}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_v4l2src"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"blocksize":{"blurb":"Size in bytes to read per buffer (-1 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"num-buffers":{"blurb":"Number of buffers to output before sending EOS (-1 = unlimited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"typefind":{"blurb":"Run typefind before negotiating (deprecated, non-functional)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-timestamp":{"blurb":"Apply current stream time to buffers","flags":"readable, writable","type":"Boolean","default":"false"},"device":{"blurb":"Device location","flags":"readable, writable","type":"String","default":"/dev/video0"},"device-name":{"blurb":"Name of the device","flags":"readable","type":"String","default":"null"},"device-fd":{"blurb":"File descriptor of the device","flags":"readable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"flags":{"blurb":"Device type flags","flags":"readable","type":"Flags","default":"0x00000000","choice":{"0x00000001":"capture          - Device supports video capture","0x00000002":"output           - Device supports video playback","0x00000004":"overlay          - Device supports video overlay","0x00000010":"vbi-capture      - Device supports the VBI capture","0x00000020":"vbi-output       - Device supports the VBI output","0x00010000":"tuner            - Device has a tuner or modulator","0x00020000":"audio            - Device has audio inputs or outputs"}},"brightness":{"blurb":"Picture brightness, or more precisely, the black level","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"contrast":{"blurb":"Picture contrast or luma gain","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"saturation":{"blurb":"Picture color saturation or chroma gain","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"hue":{"blurb":"Hue or color balance","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"norm":{"blurb":"video standard","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"none             - none","45056":"NTSC             - NTSC","4096":"NTSC-M           - NTSC-M","8192":"NTSC-M-JP        - NTSC-M-JP","32768":"NTSC-M-KR        - NTSC-M-KR","16384":"NTSC-443         - NTSC-443","255":"PAL              - PAL","7":"PAL-BG           - PAL-BG","1":"PAL-B            - PAL-B","2":"PAL-B1           - PAL-B1","4":"PAL-G            - PAL-G","8":"PAL-H            - PAL-H","16":"PAL-I            - PAL-I","224":"PAL-DK           - PAL-DK","32":"PAL-D            - PAL-D","64":"PAL-D1           - PAL-D1","128":"PAL-K            - PAL-K","256":"PAL-M            - PAL-M","512":"PAL-N            - PAL-N","1024":"PAL-Nc           - PAL-Nc","2048":"PAL-60           - PAL-60","16711680":"SECAM            - SECAM","65536":"SECAM-B          - SECAM-B","262144":"SECAM-G          - SECAM-G","524288":"SECAM-H          - SECAM-H","3276800":"SECAM-DK         - SECAM-DK","131072":"SECAM-D          - SECAM-D","1048576":"SECAM-K          - SECAM-K","2097152":"SECAM-K1         - SECAM-K1","4194304":"SECAM-L          - SECAM-L","8388608":"SECAM-Lc         - SECAM-Lc"}},"io-mode":{"blurb":"I/O mode","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"auto             - GST_V4L2_IO_AUTO","1":"rw               - GST_V4L2_IO_RW","2":"mmap             - GST_V4L2_IO_MMAP","3":"userptr          - GST_V4L2_IO_USERPTR","4":"dmabuf           - GST_V4L2_IO_DMABUF","5":"dmabuf-import    - GST_V4L2_IO_DMABUF_IMPORT"}},"extra-controls":{"blurb":"Extra v4l2 controls (CIDs) for the device","flags":"readable, writable","type":"Boxed pointer of type GstStructure"},"pixel-aspect-ratio":{"blurb":"Overwrite the pixel aspect ratio of the device","flags":"readable, writable","type":"String","default":"null"},"force-aspect-ratio":{"blurb":"When enabled, the pixel aspect ratio will be enforced","flags":"readable, writable","type":"Boolean","default":"true"}}},{"name":"v4l2sink","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Video (video4linux2) Sink","Klass":"Sink/Video","Description":"Displays frames on a video4linux2 device","Author":"Rob Clark <rob@ti.com>,","Classification":"Output"},"Plugin Details":{"Name":"video4linux2","Description":"elements for Video 4 Linux","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideo4linux2.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"image/jpeg":{},"video/mpeg":[{"mpegversion":"4","systemstream":"false"},{"mpegversion":"{ (int)1, (int)2 }"}],"video/mpegts":{"systemstream":"true"},"video/x-bayer":{"format":"{ (string)bggr, (string)gbrg, (string)grbg, (string)rggb }","framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-dv":{"systemstream":"true"},"video/x-fwht":{},"video/x-h263":{"variant":"itu"},"video/x-h264":{"alignment":"au","stream-format":"{ (string)byte-stream, (string)avc }"},"video/x-h265":{"alignment":"au","stream-format":"byte-stream"},"video/x-pwc1":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-pwc2":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-raw":{"format":"{ (string)RGB16, (string)BGR, (string)RGB, (string)GRAY8, (string)GRAY16_LE, (string)GRAY16_BE, (string)YVU9, (string)YV12, (string)YUY2, (string)YVYU, (string)UYVY, (string)Y42B, (string)Y41B, (string)YUV9, (string)NV12_64Z32, (string)NV24, (string)NV61, (string)NV16, (string)NV21, (string)NV12, (string)I420, (string)BGRA, (string)BGRx, (string)ARGB, (string)xRGB, (string)BGR15, (string)RGB15 }","framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-sonix":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 32768 ]","width":"[ 1, 32768 ]"},"video/x-vp8":{},"video/x-vp9":{},"video/x-wmv":{"format":"WVC1","wmvversion":"3"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_v4l2sink"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"sync":{"blurb":"Sync on the clock","flags":"readable, writable","type":"Boolean","default":"true"},"max-lateness":{"blurb":"Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)","flags":"readable, writable","type":"Integer64","default":"5000000","range_max":"9223372036854775807","range_min":"-1"},"qos":{"blurb":"Generate Quality-of-Service events upstream","flags":"readable, writable","type":"Boolean","default":"true"},"async":{"blurb":"Go asynchronously to PAUSED","flags":"readable, writable","type":"Boolean","default":"true"},"ts-offset":{"blurb":"Timestamp offset in nanoseconds","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"enable-last-sample":{"blurb":"Enable the last-sample property","flags":"readable, writable","type":"Boolean","default":"true"},"last-sample":{"blurb":"The last sample received in the sink","flags":"readable","type":"Boxed pointer of type GstSample"},"blocksize":{"blurb":"Size in bytes to pull per buffer (0 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"render-delay":{"blurb":"Additional render delay of the sink in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"throttle-time":{"blurb":"The time to keep between rendered buffers (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-bitrate":{"blurb":"The maximum bits per second to render (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"processing-deadline":{"blurb":"Maximum processing deadline in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"15000000","range_max":"18446744073709551615","range_min":"0"},"show-preroll-frame":{"blurb":"Whether to render video frames during preroll","flags":"readable, writable","type":"Boolean","default":"true"},"device":{"blurb":"Device location","flags":"readable, writable","type":"String","default":"/dev/video1"},"device-name":{"blurb":"Name of the device","flags":"readable","type":"String","default":"null"},"device-fd":{"blurb":"File descriptor of the device","flags":"readable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"flags":{"blurb":"Device type flags","flags":"readable","type":"Flags","default":"0x00000000","choice":{"0x00000001":"capture          - Device supports video capture","0x00000002":"output           - Device supports video playback","0x00000004":"overlay          - Device supports video overlay","0x00000010":"vbi-capture      - Device supports the VBI capture","0x00000020":"vbi-output       - Device supports the VBI output","0x00010000":"tuner            - Device has a tuner or modulator","0x00020000":"audio            - Device has audio inputs or outputs"}},"brightness":{"blurb":"Picture brightness, or more precisely, the black level","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"contrast":{"blurb":"Picture contrast or luma gain","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"saturation":{"blurb":"Picture color saturation or chroma gain","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"hue":{"blurb":"Hue or color balance","flags":"readable, writable, controllable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"norm":{"blurb":"video standard","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"none             - none","45056":"NTSC             - NTSC","4096":"NTSC-M           - NTSC-M","8192":"NTSC-M-JP        - NTSC-M-JP","32768":"NTSC-M-KR        - NTSC-M-KR","16384":"NTSC-443         - NTSC-443","255":"PAL              - PAL","7":"PAL-BG           - PAL-BG","1":"PAL-B            - PAL-B","2":"PAL-B1           - PAL-B1","4":"PAL-G            - PAL-G","8":"PAL-H            - PAL-H","16":"PAL-I            - PAL-I","224":"PAL-DK           - PAL-DK","32":"PAL-D            - PAL-D","64":"PAL-D1           - PAL-D1","128":"PAL-K            - PAL-K","256":"PAL-M            - PAL-M","512":"PAL-N            - PAL-N","1024":"PAL-Nc           - PAL-Nc","2048":"PAL-60           - PAL-60","16711680":"SECAM            - SECAM","65536":"SECAM-B          - SECAM-B","262144":"SECAM-G          - SECAM-G","524288":"SECAM-H          - SECAM-H","3276800":"SECAM-DK         - SECAM-DK","131072":"SECAM-D          - SECAM-D","1048576":"SECAM-K          - SECAM-K","2097152":"SECAM-K1         - SECAM-K1","4194304":"SECAM-L          - SECAM-L","8388608":"SECAM-Lc         - SECAM-Lc"}},"io-mode":{"blurb":"I/O mode","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"auto             - GST_V4L2_IO_AUTO","1":"rw               - GST_V4L2_IO_RW","2":"mmap             - GST_V4L2_IO_MMAP","3":"userptr          - GST_V4L2_IO_USERPTR","4":"dmabuf           - GST_V4L2_IO_DMABUF","5":"dmabuf-import    - GST_V4L2_IO_DMABUF_IMPORT"}},"extra-controls":{"blurb":"Extra v4l2 controls (CIDs) for the device","flags":"readable, writable","type":"Boxed pointer of type GstStructure"},"pixel-aspect-ratio":{"blurb":"Overwrite the pixel aspect ratio of the device","flags":"readable, writable","type":"String","default":"null"},"force-aspect-ratio":{"blurb":"When enabled, the pixel aspect ratio will be enforced","flags":"readable, writable","type":"Boolean","default":"true"},"overlay-top":{"blurb":"The topmost (y) coordinate of the video overlay; top left corner of screen is 0,0","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"overlay-left":{"blurb":"The leftmost (x) coordinate of the video overlay; top left corner of screen is 0,0","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"overlay-width":{"blurb":"The width of the video overlay; default is equal to negotiated image width","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"overlay-height":{"blurb":"The height of the video overlay; default is equal to negotiated image height","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"crop-top":{"blurb":"The topmost (y) coordinate of the video crop; top left corner of image is 0,0","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"crop-left":{"blurb":"The leftmost (x) coordinate of the video crop; top left corner of image is 0,0","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"-2147483648"},"crop-width":{"blurb":"The width of the video crop; default is equal to negotiated image width","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"crop-height":{"blurb":"The height of the video crop; default is equal to negotiated image height","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"h263parse","Factory Details":{"Rank":"primary + 1 (257)","GraphAgentElement":false,"Long-name":"H.263 parser","Klass":"Codec/Parser/Video","Description":"Parses H.263 streams","Author":"Arun Raghavan <arun.raghavan@collabora.co.uk>,Edward Hervey <edward.hervey@collabora.co.uk>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h263":{"variant":"itu"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h263":{"framerate":"[ 0/1, 2147483647/1 ]","parsed":"true","variant":"itu"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_h263parse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"h264parse","Factory Details":{"Rank":"primary + 1 (257)","GraphAgentElement":false,"Long-name":"H.264 parser","Klass":"Codec/Parser/Converter/Video","Description":"Parses H.264 streams","Author":"Mark Nauwelaerts <mark.nauwelaerts@collabora.co.uk>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h264":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h264":{"alignment":"{ (string)au, (string)nal }","parsed":"true","stream-format":"{ (string)avc, (string)avc3, (string)byte-stream }"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_h264parse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"},"config-interval":{"blurb":"Send SPS and PPS Insertion Interval in seconds (sprop parameter sets will be multiplexed in the data stream when detected.) (0 = disabled, -1 = send with every IDR frame)","flags":"readable, writable","type":"Integer","default":"0","range_max":"3600","range_min":"-1"}}},{"name":"diracparse","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Dirac parser","Klass":"Codec/Parser/Video","Description":"Parses Dirac streams","Author":"David Schleef <ds@schleef.org>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-dirac":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-dirac":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 1, 2147483647 ]","interlace-mode":"{ (string)progressive, (string)interleaved }","level":"{ (string)0, (string)1, (string)128 }","parsed":"true","pixel-aspect-ratio":"[ 0/1, 2147483647/1 ]","profile":"{ (string)vc2-low-delay, (string)vc2-simple, (string)vc2-main, (string)main }","width":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_diracparse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"mpegvideoparse","Factory Details":{"Rank":"primary + 1 (257)","GraphAgentElement":false,"Long-name":"MPEG video elementary stream parser","Klass":"Codec/Parser/Video","Description":"Parses and frames MPEG-1 and MPEG-2 elementary video streams","Author":"Wim Taymans <wim.taymans@ccollabora.co.uk>, Jan Schmidt <thaytan@mad.scientist.com>, Mark Nauwelaerts <mark.nauwelaerts@collabora.co.uk>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/mpeg":{"mpegversion":"[ 1, 2 ]","systemstream":"false"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/mpeg":{"mpegversion":"[ 1, 2 ]","parsed":"true","systemstream":"false"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mpegvideoparse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"},"drop":{"blurb":"Drop data untill valid configuration data is received either in the stream or through caps","flags":"readable, writable","type":"Boolean","default":"true"},"gop-split":{"blurb":"Split frame when encountering GOP","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"mpeg4videoparse","Factory Details":{"Rank":"primary + 1 (257)","GraphAgentElement":false,"Long-name":"MPEG 4 video elementary stream parser","Klass":"Codec/Parser/Video","Description":"Parses MPEG-4 Part 2 elementary video streams","Author":"Julien Moutte <julien@fluendo.com>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/mpeg":{"mpegversion":"4","systemstream":"false"},"video/x-divx":{"divxversion":"[ 4, 5 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/mpeg":{"framerate":"[ 0/1, 2147483647/1 ]","height":"[ 0, 2147483647 ]","mpegversion":"4","parsed":"true","systemstream":"false","width":"[ 0, 2147483647 ]"},"video/x-divx":{"divxversion":"[ 4, 5 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_mpeg4videoparse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"},"drop":{"blurb":"Drop data untill valid configuration data is received either in the stream or through caps","flags":"readable, writable","type":"Boolean","default":"true"},"config-interval":{"blurb":"Send Configuration Insertion Interval in seconds (configuration headers will be multiplexed in the data stream when detected.) (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"3600","range_min":"0"}}},{"name":"pngparse","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"PNG parser","Klass":"Codec/Parser/Video/Image","Description":"Parses PNG files","Author":"Olivier Crete <olivier.crete@collabora.com>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"image/png":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"image/png":{"height":"[ 1, 2147483647 ]","parsed":"true","width":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_pngparse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"jpeg2000parse","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"JPEG 2000 parser","Klass":"Codec/Parser/Video/Image","Description":"Parses JPEG 2000 files","Author":"Aaron Boxer <boxerab@gmail.com>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"image/jp2":{},"image/x-j2c":{},"image/x-jpc":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"image/x-j2c":{"colorspace":"{ (string)sRGB, (string)sYUV, (string)GRAY }","height":"[ 1, 2147483647 ]","parsed":"true","profile":"[ 0, 49151 ]","sampling":"{ (string)RGB, (string)BGR, (string)RGBA, (string)BGRA, (string)YCbCr-4:4:4, (string)YCbCr-4:2:2, (string)YCbCr-4:2:0, (string)YCbCr-4:1:1, (string)GRAYSCALE, (string)YCbCrA-4:4:4:4 }","width":"[ 1, 2147483647 ]"},"image/x-jpc":{"colorspace":"{ (string)sRGB, (string)sYUV, (string)GRAY }","height":"[ 1, 2147483647 ]","parsed":"true","profile":"[ 0, 49151 ]","sampling":"{ (string)RGB, (string)BGR, (string)RGBA, (string)BGRA, (string)YCbCr-4:4:4, (string)YCbCr-4:2:2, (string)YCbCr-4:2:0, (string)YCbCr-4:1:1, (string)GRAYSCALE, (string)YCbCrA-4:4:4:4 }","width":"[ 1, 2147483647 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_jpeg2000parse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"h265parse","Factory Details":{"Rank":"secondary (128)","GraphAgentElement":false,"Long-name":"H.265 parser","Klass":"Codec/Parser/Converter/Video","Description":"Parses H.265 streams","Author":"Sreerenj Balachandran <sreerenj.balachandran@intel.com>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-h265":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-h265":{"alignment":"{ (string)au, (string)nal }","parsed":"true","stream-format":"{ (string)hvc1, (string)hev1, (string)byte-stream }"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_h265parse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"},"config-interval":{"blurb":"Send VPS, SPS and PPS Insertion Interval in seconds (sprop parameter sets will be multiplexed in the data stream when detected.) (0 = disabled, -1 = send with every IDR frame)","flags":"readable, writable","type":"Integer","default":"0","range_max":"3600","range_min":"-1"}}},{"name":"vc1parse","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"VC1 parser","Klass":"Codec/Parser/Converter/Video","Description":"Parses VC1 streams","Author":"Sebastian Dröge <sebastian.droege@collabora.co.uk>","Classification":"Parser"},"Plugin Details":{"Name":"videoparsersbad","Description":"videoparsers","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstvideoparsersbad.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-bad","Binary package":"GStreamer Bad Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"video/x-wmv":{"format":"{ (string)WVC1, (string)WMV3 }","wmvversion":"3"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"video/x-wmv":{"format":"{ (string)WVC1, (string)WMV3 }","header-format":"{ (string)none, (string)asf, (string)sequence-layer }","stream-format":"{ (string)bdu, (string)bdu-frame, (string)sequence-layer-bdu, (string)sequence-layer-bdu-frame, (string)sequence-layer-raw-frame, (string)sequence-layer-frame-layer, (string)asf, (string)frame-layer }","wmvversion":"3"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_vc1parse"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"disable-passthrough":{"blurb":"Force processing (disables passthrough)","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"capsfilter","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"CapsFilter","Klass":"Generic","Description":"Pass data without modification, limiting formats","Author":"David Schleef <ds@schleef.org>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_capsfilter"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"qos":{"blurb":"Handle Quality-of-Service events","flags":"readable, writable","type":"Boolean","default":"false"},"caps":{"blurb":"Restrict the possible allowed capabilities (NULL means ANY). Setting this property takes a reference to the supplied GstCaps object.","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boxed pointer of type GstCaps"},"caps-change-mode":{"blurb":"Filter caps change behaviour","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Enum","default":"0","choice":{"0":"immediate        - Only accept the current filter caps","1":"delayed          - Temporarily accept previous filter caps"}}}},{"name":"concat","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Concat","Klass":"Generic","Description":"Concatenate multiple streams","Author":"Sebastian Dröge <sebastian@centricular.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_concat"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"active-pad":{"blurb":"Currently active src pad","flags":"readable","type":"Object of type GstPad"},"adjust-base":{"blurb":"Adjust the base value of segments to ensure they are adjacent","flags":"readable, writable","type":"Boolean","default":"true"}}},{"name":"dataurisrc","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"data: URI source element","Klass":"Source","Description":"Handles data: uris","Author":"Philippe Normand <pnormand@igalia.com>, Sebastian Dröge <sebastian.droege@collabora.co.uk>","Classification":"Input"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_dataurisrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"blocksize":{"blurb":"Size in bytes to read per buffer (-1 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"num-buffers":{"blurb":"Number of buffers to output before sending EOS (-1 = unlimited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"typefind":{"blurb":"Run typefind before negotiating (deprecated, non-functional)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-timestamp":{"blurb":"Apply current stream time to buffers","flags":"readable, writable","type":"Boolean","default":"false"},"uri":{"blurb":"URI that should be used","flags":"readable, writable","type":"String","default":"null"}}},{"name":"downloadbuffer","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"DownloadBuffer","Klass":"Generic","Description":"Download Buffer element","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_downloadbuffer"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"max-size-bytes":{"blurb":"Max. amount of data to buffer (bytes, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"2097152","range_max":"4294967295","range_min":"0"},"max-size-time":{"blurb":"Max. amount of data to buffer (in ns, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer64","default":"2000000000","range_max":"18446744073709551615","range_min":"0"},"low-percent":{"blurb":"Low threshold for buffering to start. Only used if use-buffering is True","flags":"readable, writable","type":"Integer","default":"10","range_max":"100","range_min":"0"},"high-percent":{"blurb":"High threshold for buffering to finish. Only used if use-buffering is True","flags":"readable, writable","type":"Integer","default":"99","range_max":"100","range_min":"0"},"temp-template":{"blurb":"File template to store temporary files in, should contain directory and XXXXXX. (NULL == disabled)","flags":"readable, writable","type":"String","default":"null"},"temp-location":{"blurb":"Location to store temporary files in (Only read this property, use temp-template to configure the name template)","flags":"readable","type":"String","default":"null"},"temp-remove":{"blurb":"Remove the temp-location after use","flags":"readable, writable","type":"Boolean","default":"true"}}},{"name":"fakesrc","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Fake Source","Klass":"Source","Description":"Push empty (no data) buffers around","Author":"Erik Walthinsen <omega@cse.ogi.edu>, Wim Taymans <wim@fluendo.com>","Classification":"Input"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_fakesrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"blocksize":{"blurb":"Size in bytes to read per buffer (-1 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"num-buffers":{"blurb":"Number of buffers to output before sending EOS (-1 = unlimited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"typefind":{"blurb":"Run typefind before negotiating (deprecated, non-functional)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-timestamp":{"blurb":"Apply current stream time to buffers","flags":"readable, writable","type":"Boolean","default":"false"},"data":{"blurb":"Data allocation method","flags":"readable, writable","type":"Enum","default":"1","choice":{"1":"allocate         - Allocate data","2":"subbuffer        - Subbuffer data"}},"sizetype":{"blurb":"How to determine buffer sizes","flags":"readable, writable","type":"Enum","default":"1","choice":{"1":"empty            - Send empty buffers","2":"fixed            - Fixed size buffers (sizemax sized)","3":"random           - Random sized buffers (sizemin <= size <= sizemax)"}},"sizemin":{"blurb":"Minimum buffer size","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"0"},"sizemax":{"blurb":"Maximum buffer size","flags":"readable, writable","type":"Integer","default":"4096","range_max":"2147483647","range_min":"0"},"filltype":{"blurb":"How to fill the buffer, if at all","flags":"readable, writable","type":"Enum","default":"1","choice":{"1":"nothing          - Leave data as malloced","2":"zero             - Fill buffers with zeros","3":"random           - Fill buffers with random data","4":"pattern          - Fill buffers with pattern 0x00 -> 0xff","5":"pattern-span     - Fill buffers with pattern 0x00 -> 0xff that spans buffers"}},"datarate":{"blurb":"Timestamps buffers with number of bytes per second (0 = none)","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"0"},"sync":{"blurb":"Sync to the clock to the datarate","flags":"readable, writable","type":"Boolean","default":"false"},"pattern":{"blurb":"Set the pattern (unused)","flags":"readable, writable","type":"String","default":"null"},"signal-handoffs":{"blurb":"Send a signal before pushing the buffer","flags":"readable, writable","type":"Boolean","default":"false"},"silent":{"blurb":"Don't produce last_message events","flags":"readable, writable","type":"Boolean","default":"true"},"dump":{"blurb":"Dump buffer contents to stdout","flags":"readable, writable","type":"Boolean","default":"false"},"parentsize":{"blurb":"Size of parent buffer for sub-buffered allocation","flags":"readable, writable","type":"Integer","default":"40960","range_max":"2147483647","range_min":"0"},"last-message":{"blurb":"The last status message","flags":"readable","type":"String","default":"null"},"can-activate-pull":{"blurb":"Can activate in pull mode","flags":"readable, writable","type":"Boolean","default":"true"},"can-activate-push":{"blurb":"Can activate in push mode","flags":"readable, writable","type":"Boolean","default":"true"},"is-live":{"blurb":"True if the element cannot produce data in PAUSED","flags":"readable, writable","type":"Boolean","default":"false"},"format":{"blurb":"The format of the segment events","flags":"readable, writable","type":"Enum","default":"2","choice":{"0":"undefined        - GST_FORMAT_UNDEFINED","1":"default          - GST_FORMAT_DEFAULT","2":"bytes            - GST_FORMAT_BYTES","3":"time             - GST_FORMAT_TIME","4":"buffers          - GST_FORMAT_BUFFERS","5":"percent          - GST_FORMAT_PERCENT"}}}},{"name":"fakesink","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Fake Sink","Klass":"Sink","Description":"Black hole for data","Author":"Erik Walthinsen <omega@cse.ogi.edu>, Wim Taymans <wim@fluendo.com>, Mr. 'frag-me-more' Vanderwingo <wingo@fluendo.com>","Classification":"Output"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_fakesink"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"sync":{"blurb":"Sync on the clock","flags":"readable, writable","type":"Boolean","default":"false"},"max-lateness":{"blurb":"Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"qos":{"blurb":"Generate Quality-of-Service events upstream","flags":"readable, writable","type":"Boolean","default":"false"},"async":{"blurb":"Go asynchronously to PAUSED","flags":"readable, writable","type":"Boolean","default":"true"},"ts-offset":{"blurb":"Timestamp offset in nanoseconds","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"enable-last-sample":{"blurb":"Enable the last-sample property","flags":"readable, writable","type":"Boolean","default":"true"},"last-sample":{"blurb":"The last sample received in the sink","flags":"readable","type":"Boxed pointer of type GstSample"},"blocksize":{"blurb":"Size in bytes to pull per buffer (0 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"render-delay":{"blurb":"Additional render delay of the sink in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"throttle-time":{"blurb":"The time to keep between rendered buffers (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-bitrate":{"blurb":"The maximum bits per second to render (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"processing-deadline":{"blurb":"Maximum processing deadline in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"20000000","range_max":"18446744073709551615","range_min":"0"},"state-error":{"blurb":"Generate a state change error","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"none             - No state change errors","1":"null-to-ready    - Fail state change from NULL to READY","2":"ready-to-paused  - Fail state change from READY to PAUSED","3":"paused-to-playing - Fail state change from PAUSED to PLAYING","4":"playing-to-paused - Fail state change from PLAYING to PAUSED","5":"paused-to-ready  - Fail state change from PAUSED to READY","6":"ready-to-null    - Fail state change from READY to NULL"}},"silent":{"blurb":"Don't produce last_message events","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"true"},"dump":{"blurb":"Dump buffer contents to stdout","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"false"},"signal-handoffs":{"blurb":"Send a signal before unreffing the buffer","flags":"readable, writable","type":"Boolean","default":"false"},"drop-out-of-segment":{"blurb":"Drop and don't render / hand off out-of-segment buffers","flags":"readable, writable","type":"Boolean","default":"true"},"last-message":{"blurb":"The message describing current status","flags":"readable","type":"String","default":"null"},"can-activate-push":{"blurb":"Can activate in push mode","flags":"readable, writable","type":"Boolean","default":"true"},"can-activate-pull":{"blurb":"Can activate in pull mode","flags":"readable, writable","type":"Boolean","default":"false"},"num-buffers":{"blurb":"Number of buffers to accept going EOS","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"}}},{"name":"fdsrc","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Filedescriptor Source","Klass":"Source/File","Description":"Read from a file descriptor","Author":"Erik Walthinsen <omega@cse.ogi.edu>","Classification":"Input"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_fdsrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"blocksize":{"blurb":"Size in bytes to read per buffer (-1 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"num-buffers":{"blurb":"Number of buffers to output before sending EOS (-1 = unlimited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"typefind":{"blurb":"Run typefind before negotiating (deprecated, non-functional)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-timestamp":{"blurb":"Apply current stream time to buffers","flags":"readable, writable","type":"Boolean","default":"false"},"fd":{"blurb":"An open file descriptor to read from","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"0"},"timeout":{"blurb":"Post a message after timeout microseconds (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"}}},{"name":"fdsink","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Filedescriptor Sink","Klass":"Sink/File","Description":"Write data to a file descriptor","Author":"Erik Walthinsen <omega@cse.ogi.edu>","Classification":"Output"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_fdsink"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"sync":{"blurb":"Sync on the clock","flags":"readable, writable","type":"Boolean","default":"false"},"max-lateness":{"blurb":"Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"qos":{"blurb":"Generate Quality-of-Service events upstream","flags":"readable, writable","type":"Boolean","default":"false"},"async":{"blurb":"Go asynchronously to PAUSED","flags":"readable, writable","type":"Boolean","default":"true"},"ts-offset":{"blurb":"Timestamp offset in nanoseconds","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"enable-last-sample":{"blurb":"Enable the last-sample property","flags":"readable, writable","type":"Boolean","default":"true"},"last-sample":{"blurb":"The last sample received in the sink","flags":"readable","type":"Boxed pointer of type GstSample"},"blocksize":{"blurb":"Size in bytes to pull per buffer (0 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"render-delay":{"blurb":"Additional render delay of the sink in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"throttle-time":{"blurb":"The time to keep between rendered buffers (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-bitrate":{"blurb":"The maximum bits per second to render (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"processing-deadline":{"blurb":"Maximum processing deadline in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"20000000","range_max":"18446744073709551615","range_min":"0"},"fd":{"blurb":"An open file descriptor to write to","flags":"readable, writable","type":"Integer","default":"1","range_max":"2147483647","range_min":"0"}}},{"name":"filesrc","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"File Source","Klass":"Source/File","Description":"Read from arbitrary point in a file","Author":"Erik Walthinsen <omega@cse.ogi.edu>","Classification":"Input"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_filesrc"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"blocksize":{"blurb":"Size in bytes to read per buffer (-1 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"num-buffers":{"blurb":"Number of buffers to output before sending EOS (-1 = unlimited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"typefind":{"blurb":"Run typefind before negotiating (deprecated, non-functional)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-timestamp":{"blurb":"Apply current stream time to buffers","flags":"readable, writable","type":"Boolean","default":"false"},"location":{"blurb":"Location of the file to read","flags":"readable, writable, changeable only in NULL or READY state","type":"String","default":"null"}}},{"name":"funnel","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Funnel pipe fitting","Klass":"Generic","Description":"N-to-1 pipe fitting","Author":"Olivier Crete <olivier.crete@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_funnel"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"forward-sticky-events":{"blurb":"Forward sticky events on stream changes","flags":"readable, writable, changeable only in NULL or READY state","type":"Boolean","default":"true"}}},{"name":"identity","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Identity","Klass":"Generic","Description":"Pass data without modification","Author":"Erik Walthinsen <omega@cse.ogi.edu>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_identity"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"qos":{"blurb":"Handle Quality-of-Service events","flags":"readable, writable","type":"Boolean","default":"false"},"sleep-time":{"blurb":"Microseconds to sleep between processing","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"error-after":{"blurb":"Error after N buffers","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"drop-probability":{"blurb":"The Probability a buffer is dropped","flags":"readable, writable","type":"Float","default":"0","range_max":"1","range_min":"0"},"drop-buffer-flags":{"blurb":"Drop buffers with the given flags","flags":"readable, writable","type":"Flags","default":"0x00000000","choice":{"0x00000010":"live             - GST_BUFFER_FLAG_LIVE","0x00000020":"decode-only      - GST_BUFFER_FLAG_DECODE_ONLY","0x00000040":"discont          - GST_BUFFER_FLAG_DISCONT","0x00000080":"resync           - GST_BUFFER_FLAG_RESYNC","0x00000100":"corrupted        - GST_BUFFER_FLAG_CORRUPTED","0x00000200":"marker           - GST_BUFFER_FLAG_MARKER","0x00000400":"header           - GST_BUFFER_FLAG_HEADER","0x00000800":"gap              - GST_BUFFER_FLAG_GAP","0x00001000":"droppable        - GST_BUFFER_FLAG_DROPPABLE","0x00002000":"delta-unit       - GST_BUFFER_FLAG_DELTA_UNIT","0x00004000":"tag-memory       - GST_BUFFER_FLAG_TAG_MEMORY","0x00008000":"sync-after       - GST_BUFFER_FLAG_SYNC_AFTER","0x00010000":"non-droppable    - GST_BUFFER_FLAG_NON_DROPPABLE","0x00100000":"last             - GST_BUFFER_FLAG_LAST"}},"datarate":{"blurb":"(Re)timestamps buffers with number of bytes per second (0 = inactive)","flags":"readable, writable","type":"Integer","default":"0","range_max":"2147483647","range_min":"0"},"silent":{"blurb":"silent","flags":"readable, writable","type":"Boolean","default":"true"},"single-segment":{"blurb":"Timestamp buffers and eat segments so as to appear as one segment","flags":"readable, writable","type":"Boolean","default":"false"},"last-message":{"blurb":"last-message","flags":"readable","type":"String","default":"null"},"dump":{"blurb":"Dump buffer contents to stdout","flags":"readable, writable","type":"Boolean","default":"false"},"sync":{"blurb":"Synchronize to pipeline clock","flags":"readable, writable","type":"Boolean","default":"false"},"ts-offset":{"blurb":"Timestamp offset in nanoseconds for synchronisation, negative for earlier sync","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"check-imperfect-timestamp":{"blurb":"Send element messages if timestamps and durations do not match up","flags":"readable, writable","type":"Boolean","default":"false"},"check-imperfect-offset":{"blurb":"Send element messages if offset and offset_end do not match up","flags":"readable, writable","type":"Boolean","default":"false"},"signal-handoffs":{"blurb":"Send a signal before pushing the buffer","flags":"readable, writable","type":"Boolean","default":"true"},"drop-allocation":{"blurb":"Don't forward allocation queries","flags":"readable, writable","type":"Boolean","default":"false"},"eos-after":{"blurb":"EOS after N buffers","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"}}},{"name":"input-selector","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Input selector","Klass":"Generic","Description":"N-to-1 input stream selector","Author":"Julien Moutte <julien@moutte.net>, Jan Schmidt <thaytan@mad.scientist.com>, Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_input-selector"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"n-pads":{"blurb":"The number of sink pads","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"active-pad":{"blurb":"The currently active sink pad","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Object of type GstPad"},"sync-streams":{"blurb":"Synchronize inactive streams to the running time of the active stream or to the current clock","flags":"readable, writable, changeable only in NULL or READY state","type":"Boolean","default":"true"},"sync-mode":{"blurb":"Behavior in sync-streams mode","flags":"readable, writable, changeable only in NULL or READY state","type":"Enum","default":"0","choice":{"0":"active-segment   - Sync using the current active segment","1":"clock            - Sync using the clock"}},"cache-buffers":{"blurb":"Cache buffers for active-pad","flags":"readable, writable, changeable only in NULL or READY state","type":"Boolean","default":"false"}}},{"name":"output-selector","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Output selector","Klass":"Generic","Description":"1-to-N output stream selector","Author":"Stefan Kost <stefan.kost@nokia.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src_%u","Availability":"On request","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_output-selector"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"active-pad":{"blurb":"Currently active src pad","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Object of type GstPad"},"resend-latest":{"blurb":"Resend latest buffer after a switch to a new pad","flags":"readable, writable","type":"Boolean","default":"false"},"pad-negotiation-mode":{"blurb":"The mode to be used for pad negotiation","flags":"readable, writable","type":"Enum","default":"1","choice":{"0":"none             - None","1":"all              - All","2":"active           - Active"}}}},{"name":"queue","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Queue","Klass":"Generic","Description":"Simple data queue","Author":"Erik Walthinsen <omega@cse.ogi.edu>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_queue"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"current-level-buffers":{"blurb":"Current number of buffers in the queue","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"current-level-bytes":{"blurb":"Current amount of data in the queue (bytes)","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"current-level-time":{"blurb":"Current amount of data in the queue (in ns)","flags":"readable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-size-buffers":{"blurb":"Max. number of buffers in the queue (0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"200","range_max":"4294967295","range_min":"0"},"max-size-bytes":{"blurb":"Max. amount of data in the queue (bytes, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"10485760","range_max":"4294967295","range_min":"0"},"max-size-time":{"blurb":"Max. amount of data in the queue (in ns, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer64","default":"1000000000","range_max":"18446744073709551615","range_min":"0"},"min-threshold-buffers":{"blurb":"Min. number of buffers in the queue to allow reading (0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"min-threshold-bytes":{"blurb":"Min. amount of data in the queue to allow reading (bytes, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"min-threshold-time":{"blurb":"Min. amount of data in the queue to allow reading (in ns, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"leaky":{"blurb":"Where the queue leaks, if at all","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Enum","default":"0","choice":{"0":"no               - Not Leaky","1":"upstream         - Leaky on upstream (new buffers)","2":"downstream       - Leaky on downstream (old buffers)"}},"silent":{"blurb":"Don't emit queue signals","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"false"},"flush-on-eos":{"blurb":"Discard all data in the queue when an EOS event is received","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"false"}}},{"name":"queue2","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Queue 2","Klass":"Generic","Description":"Simple data queue","Author":"Erik Walthinsen <omega@cse.ogi.edu>, Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_queue2"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"current-level-buffers":{"blurb":"Current number of buffers in the queue","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"current-level-bytes":{"blurb":"Current amount of data in the queue (bytes)","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"current-level-time":{"blurb":"Current amount of data in the queue (in ns)","flags":"readable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-size-buffers":{"blurb":"Max. number of buffers in the queue (0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"100","range_max":"4294967295","range_min":"0"},"max-size-bytes":{"blurb":"Max. amount of data in the queue (bytes, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"2097152","range_max":"4294967295","range_min":"0"},"max-size-time":{"blurb":"Max. amount of data in the queue (in ns, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer64","default":"2000000000","range_max":"18446744073709551615","range_min":"0"},"use-buffering":{"blurb":"Emit GST_MESSAGE_BUFFERING based on low-/high-percent thresholds","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"false"},"use-tags-bitrate":{"blurb":"Use a bitrate from upstream tags to estimate buffer duration if not provided","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"false"},"use-rate-estimate":{"blurb":"Estimate the bitrate of the stream to calculate time level","flags":"readable, writable","type":"Boolean","default":"true"},"low-percent":{"blurb":"Low threshold for buffering to start. Only used if use-buffering is True (Deprecated: use low-watermark instead)","flags":"readable, writable","type":"Integer","default":"1","range_max":"100","range_min":"0"},"high-percent":{"blurb":"High threshold for buffering to finish. Only used if use-buffering is True (Deprecated: use high-watermark instead)","flags":"readable, writable","type":"Integer","default":"99","range_max":"100","range_min":"0"},"low-watermark":{"blurb":"Low threshold for buffering to start. Only used if use-buffering is True","flags":"readable, writable","type":"Double","default":"0.01","range_max":"1","range_min":"0"},"high-watermark":{"blurb":"High threshold for buffering to finish. Only used if use-buffering is True","flags":"readable, writable","type":"Double","default":"0.99","range_max":"1","range_min":"0"},"temp-template":{"blurb":"File template to store temporary files in, should contain directory and XXXXXX. (NULL == disabled)","flags":"readable, writable","type":"String","default":"null"},"temp-location":{"blurb":"Location to store temporary files in (Only read this property, use temp-template to configure the name template)","flags":"readable","type":"String","default":"null"},"temp-remove":{"blurb":"Remove the temp-location after use","flags":"readable, writable","type":"Boolean","default":"true"},"ring-buffer-max-size":{"blurb":"Max. amount of data in the ring buffer (bytes, 0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"avg-in-rate":{"blurb":"Average input data rate (bytes/s)","flags":"readable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"0"},"use-bitrate-query":{"blurb":"Use a bitrate from a downstream query to estimate buffer duration if not provided","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"true"},"bitrate":{"blurb":"Conversion value between data size and time","flags":"readable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"}}},{"name":"filesink","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"File Sink","Klass":"Sink/File","Description":"Write stream to a file","Author":"Thomas Vander Stichele <thomas at apestaart dot org>","Classification":"Output"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_filesink"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"sync":{"blurb":"Sync on the clock","flags":"readable, writable","type":"Boolean","default":"false"},"max-lateness":{"blurb":"Maximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)","flags":"readable, writable","type":"Integer64","default":"-1","range_max":"9223372036854775807","range_min":"-1"},"qos":{"blurb":"Generate Quality-of-Service events upstream","flags":"readable, writable","type":"Boolean","default":"false"},"async":{"blurb":"Go asynchronously to PAUSED","flags":"readable, writable","type":"Boolean","default":"true"},"ts-offset":{"blurb":"Timestamp offset in nanoseconds","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"enable-last-sample":{"blurb":"Enable the last-sample property","flags":"readable, writable","type":"Boolean","default":"true"},"last-sample":{"blurb":"The last sample received in the sink","flags":"readable","type":"Boxed pointer of type GstSample"},"blocksize":{"blurb":"Size in bytes to pull per buffer (0 = default)","flags":"readable, writable","type":"Unsigned Integer","default":"4096","range_max":"4294967295","range_min":"0"},"render-delay":{"blurb":"Additional render delay of the sink in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"throttle-time":{"blurb":"The time to keep between rendered buffers (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-bitrate":{"blurb":"The maximum bits per second to render (0 = disabled)","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"processing-deadline":{"blurb":"Maximum processing deadline in nanoseconds","flags":"readable, writable","type":"Unsigned Integer64","default":"20000000","range_max":"18446744073709551615","range_min":"0"},"location":{"blurb":"Location of the file to write","flags":"readable, writable","type":"String","default":"null"},"buffer-mode":{"blurb":"The buffering mode to use","flags":"readable, writable","type":"Enum","default":"-1","choice":{"-1":"default          - Default buffering","0":"full             - Fully buffered","1":"line             - Line buffered (deprecated, like full)","2":"unbuffered       - Unbuffered"}},"buffer-size":{"blurb":"Size of buffer in number of bytes for line or full buffer-mode","flags":"readable, writable","type":"Unsigned Integer","default":"65536","range_max":"4294967295","range_min":"0"},"append":{"blurb":"Append to an already existing file","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"tee","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Tee pipe fitting","Klass":"Generic","Description":"1-to-N pipe fitting","Author":"Erik Walthinsen <omega@cse.ogi.edu>, Wim Taymans <wim@fluendo.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src_%u","Availability":"On request","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_tee"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"num-src-pads":{"blurb":"The number of source pads","flags":"readable","type":"Integer","default":"0","range_max":"2147483647","range_min":"0"},"has-chain":{"blurb":"If the element can operate in push mode","flags":"readable, writable","type":"Boolean","default":"true"},"silent":{"blurb":"Don't produce last_message events","flags":"readable, writable","type":"Boolean","default":"true"},"last-message":{"blurb":"The message describing current status","flags":"readable","type":"String","default":"null"},"pull-mode":{"blurb":"Behavior of tee in pull mode","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"never            - Never activate in pull mode","1":"single           - Only one src pad can be active in pull mode"}},"alloc-pad":{"blurb":"The pad ALLOCATION queries will be proxied to (DEPRECATED, has no effect)","flags":"readable, writable, deprecated","type":"Object of type GstPad"},"allow-not-linked":{"blurb":"Return GST_FLOW_OK even if there are no source pads or they are all unlinked","flags":"readable, writable","type":"Boolean","default":"false"}}},{"name":"typefind","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"TypeFind","Klass":"Generic","Description":"Finds the media type of a stream","Author":"Benjamin Otte <in7y118@public.uni-hamburg.de>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"},"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_typefind"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"caps":{"blurb":"detected capabilities in stream","flags":"readable","type":"Boxed pointer of type GstCaps"},"minimum":{"blurb":"minimum probability required to accept caps","flags":"readable, writable","type":"Unsigned Integer","default":"1","range_max":"100","range_min":"1"},"force-caps":{"blurb":"force caps without doing a typefind","flags":"readable, writable","type":"Boxed pointer of type GstCaps"}}},{"name":"multiqueue","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"MultiQueue","Klass":"Generic","Description":"Multiple data queue","Author":"Edward Hervey <edward@fluendo.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":"ANY"}],"SRC template":[{"padname":"src_%u","Availability":"Sometimes","Capabilities":"ANY"}]},"Pads":null,"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_multiqueue"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"extra-size-bytes":{"blurb":"Amount of data the queues can grow if one of them is empty (bytes, 0=disable) (NOT IMPLEMENTED)","flags":"readable, writable","type":"Unsigned Integer","default":"10485760","range_max":"4294967295","range_min":"0"},"extra-size-buffers":{"blurb":"Amount of buffers the queues can grow if one of them is empty (0=disable) (NOT IMPLEMENTED)","flags":"readable, writable","type":"Unsigned Integer","default":"5","range_max":"4294967295","range_min":"0"},"extra-size-time":{"blurb":"Amount of time the queues can grow if one of them is empty (in ns, 0=disable) (NOT IMPLEMENTED)","flags":"readable, writable","type":"Unsigned Integer64","default":"3000000000","range_max":"18446744073709551615","range_min":"0"},"max-size-bytes":{"blurb":"Max. amount of data in the queue (bytes, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"10485760","range_max":"4294967295","range_min":"0"},"max-size-buffers":{"blurb":"Max. number of buffers in the queue (0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"5","range_max":"4294967295","range_min":"0"},"max-size-time":{"blurb":"Max. amount of data in the queue (in ns, 0=disable)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer64","default":"2000000000","range_max":"18446744073709551615","range_min":"0"},"use-buffering":{"blurb":"Emit GST_MESSAGE_BUFFERING based on low-/high-percent thresholds","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"false"},"low-percent":{"blurb":"Low threshold for buffering to start. Only used if use-buffering is True (Deprecated: use low-watermark instead)","flags":"readable, writable","type":"Integer","default":"1","range_max":"100","range_min":"0"},"high-percent":{"blurb":"High threshold for buffering to finish. Only used if use-buffering is True (Deprecated: use high-watermark instead)","flags":"readable, writable","type":"Integer","default":"99","range_max":"100","range_min":"0"},"low-watermark":{"blurb":"Low threshold for buffering to start. Only used if use-buffering is True","flags":"readable, writable","type":"Double","default":"0.01","range_max":"1","range_min":"0"},"high-watermark":{"blurb":"High threshold for buffering to finish. Only used if use-buffering is True","flags":"readable, writable","type":"Double","default":"0.99","range_max":"1","range_min":"0"},"sync-by-running-time":{"blurb":"Synchronize deactivated or not-linked streams by running time","flags":"readable, writable","type":"Boolean","default":"false"},"use-interleave":{"blurb":"Adjust time limits based on input interleave","flags":"readable, writable","type":"Boolean","default":"false"},"unlinked-cache-time":{"blurb":"Extra buffering in time for unlinked streams (if 'sync-by-running-time')","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer64","default":"250000000","range_max":"18446744073709551615","range_min":"0"},"min-interleave-time":{"blurb":"Minimum extra buffering for deinterleaving (size of the queues) when use-interleave=true","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer64","default":"250000000","range_max":"18446744073709551615","range_min":"0"}}},{"name":"valve","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"Valve element","Klass":"Filter","Description":"Drops buffers and events or lets them through","Author":"Olivier Crete <olivier.crete@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":"ANY"}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_valve"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"drop":{"blurb":"Whether to drop buffers and events or let them through","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Boolean","default":"false"}}},{"name":"streamiddemux","Factory Details":{"Rank":"primary (256)","GraphAgentElement":false,"Long-name":"Streamid Demux","Klass":"Generic","Description":"1-to-N output stream by stream-id","Author":"HoonHee Lee <hoonhee.lee@lge.com>","Classification":"Other"},"Plugin Details":{"Name":"coreelements","Description":"GStreamer core elements","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstcoreelements.so","Version":"1.16.2","License":"LGPL","Source module":"gstreamer","Binary package":"GStreamer source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":"ANY"}],"SRC template":[{"padname":"src_%u","Availability":"Sometimes","Capabilities":"ANY"}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_streamiddemux"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"active-pad":{"blurb":"The currently active src pad","flags":"readable","type":"Object of type GstPad"}}},{"name":"rtpbin","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Bin","Klass":"Filter/Network/RTP","Description":"Real-Time Transport Protocol bin","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"recv_rtp_sink_%u","Availability":"On request","Capabilities":{"application/x-rtp":{},"application/x-srtp":{}}},{"padname":"recv_rtcp_sink_%u","Availability":"On request","Capabilities":{"application/x-rtcp":{},"application/x-srtcp":{}}},{"padname":"send_rtp_sink_%u","Availability":"On request","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"recv_rtp_src_%u_%u_%u","Availability":"Sometimes","Capabilities":{"application/x-rtp":{}}},{"padname":"send_rtcp_src_%u","Availability":"On request","Capabilities":{"application/x-rtcp":{},"application/x-srtcp":{}}},{"padname":"send_rtp_src_%u","Availability":"Sometimes","Capabilities":{"application/x-rtp":{},"application/x-srtp":{}}}]},"Pads":null,"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpbin"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"async-handling":{"blurb":"The bin will handle Asynchronous state changes","flags":"readable, writable","type":"Boolean","default":"false"},"message-forward":{"blurb":"Forwards all children messages","flags":"readable, writable","type":"Boolean","default":"false"},"latency":{"blurb":"Default amount of ms to buffer in the jitterbuffers","flags":"readable, writable","type":"Unsigned Integer","default":"200","range_max":"4294967295","range_min":"0"},"drop-on-latency":{"blurb":"Tells the jitterbuffer to never exceed the given latency in size","flags":"readable, writable","type":"Boolean","default":"false"},"sdes":{"blurb":"The SDES items of this session","flags":"readable, writable","type":"Boxed pointer of type GstStructure"},"do-lost":{"blurb":"Send an event downstream when a packet is lost","flags":"readable, writable","type":"Boolean","default":"false"},"ignore-pt":{"blurb":"Do not demultiplex based on PT values","flags":"readable, writable","type":"Boolean","default":"false"},"ntp-sync":{"blurb":"Synchronize received streams to the NTP clock","flags":"readable, writable","type":"Boolean","default":"false"},"rtcp-sync":{"blurb":"Use of RTCP SR in synchronization","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"always           - always","1":"initial          - initial","2":"rtp-info         - rtp-info"}},"rtcp-sync-interval":{"blurb":"RTCP SR interval synchronization (ms) (0 = always)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"autoremove":{"blurb":"Automatically remove timed out sources","flags":"readable, writable","type":"Boolean","default":"false"},"buffer-mode":{"blurb":"Control the buffering algorithm in use","flags":"readable, writable","type":"Enum","default":"1","choice":{"0":"none             - Only use RTP timestamps","1":"slave            - Slave receiver to sender clock","2":"buffer           - Do low/high watermark buffering","4":"synced           - Synchronized sender and receiver clocks"}},"use-pipeline-clock":{"blurb":"Use the pipeline running-time to set the NTP time in the RTCP SR messages (DEPRECATED: Use ntp-time-source property)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"do-sync-event":{"blurb":"Send event downstream when a stream is synchronized to the sender","flags":"readable, writable","type":"Boolean","default":"false"},"do-retransmission":{"blurb":"Enable retransmission on all streams","flags":"readable, writable","type":"Boolean","default":"false"},"rtp-profile":{"blurb":"Default RTP profile of newly created sessions","flags":"readable, writable","type":"Enum","default":"1","choice":{"0":"unknown          - GST_RTP_PROFILE_UNKNOWN","1":"avp              - GST_RTP_PROFILE_AVP","2":"savp             - GST_RTP_PROFILE_SAVP","3":"avpf             - GST_RTP_PROFILE_AVPF","4":"savpf            - GST_RTP_PROFILE_SAVPF"}},"ntp-time-source":{"blurb":"NTP time source for RTCP packets","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"ntp              - NTP time based on realtime clock","1":"unix             - UNIX time based on realtime clock","2":"running-time     - Running time based on pipeline clock","3":"clock-time       - Pipeline clock time"}},"rtcp-sync-send-time":{"blurb":"Use send time or capture time for RTCP sync (TRUE = send time, FALSE = capture time)","flags":"readable, writable","type":"Boolean","default":"true"},"max-rtcp-rtp-time-diff":{"blurb":"Maximum amount of time in ms that the RTP time in RTCP SRs is allowed to be ahead (-1 disabled)","flags":"readable, writable","type":"Integer","default":"1000","range_max":"2147483647","range_min":"-1"},"max-dropout-time":{"blurb":"The maximum time (milliseconds) of missing packets tolerated.","flags":"readable, writable","type":"Unsigned Integer","default":"60000","range_max":"4294967295","range_min":"0"},"max-misorder-time":{"blurb":"The maximum time (milliseconds) of misordered packets tolerated.","flags":"readable, writable","type":"Unsigned Integer","default":"2000","range_max":"4294967295","range_min":"0"},"rfc7273-sync":{"blurb":"Synchronize received streams to the RFC7273 clock (requires clock and offset to be provided)","flags":"readable, writable","type":"Boolean","default":"false"},"max-streams":{"blurb":"The maximum number of streams to create for one session","flags":"readable, writable","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"},"max-ts-offset-adjustment":{"blurb":"The maximum number of nanoseconds per frame that time stamp offsets may be adjusted (0 = no limit).","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"max-ts-offset":{"blurb":"The maximum absolute value of the time offset in (nanoseconds). Note, if the ntp-sync parameter is set the default value is changed to 0 (no limit)","flags":"readable, writable","type":"Integer64","default":"3000000000","range_max":"9223372036854775807","range_min":"0"}}},{"name":"rtpjitterbuffer","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP packet jitter-buffer","Klass":"Filter/Network/RTP","Description":"A buffer that deals with network jitter and other transmission faults","Author":"Philippe Kalaf <philippe.kalaf@collabora.co.uk>, Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}},{"padname":"sink_rtcp","Availability":"On request","Capabilities":{"application/x-rtcp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpjitterbuffer"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"latency":{"blurb":"Amount of ms to buffer","flags":"readable, writable","type":"Unsigned Integer","default":"200","range_max":"4294967295","range_min":"0"},"drop-on-latency":{"blurb":"Tells the jitterbuffer to never exceed the given latency in size","flags":"readable, writable","type":"Boolean","default":"false"},"ts-offset":{"blurb":"Adjust buffer timestamps with offset in nanoseconds","flags":"readable, writable","type":"Integer64","default":"0","range_max":"9223372036854775807","range_min":"-9223372036854775808"},"max-ts-offset-adjustment":{"blurb":"The maximum number of nanoseconds per frame that time stamp offsets may be adjusted (0 = no limit).","flags":"readable, writable","type":"Unsigned Integer64","default":"0","range_max":"18446744073709551615","range_min":"0"},"do-lost":{"blurb":"Send an event downstream when a packet is lost","flags":"readable, writable","type":"Boolean","default":"false"},"mode":{"blurb":"Control the buffering algorithm in use","flags":"readable, writable","type":"Enum","default":"1","choice":{"0":"none             - Only use RTP timestamps","1":"slave            - Slave receiver to sender clock","2":"buffer           - Do low/high watermark buffering","4":"synced           - Synchronized sender and receiver clocks"}},"percent":{"blurb":"The buffer filled percent","flags":"readable","type":"Integer","default":"0","range_max":"100","range_min":"0"},"do-retransmission":{"blurb":"Send retransmission events upstream when a packet is late","flags":"readable, writable","type":"Boolean","default":"false"},"rtx-next-seqnum":{"blurb":"Estimate when the next packet should arrive and schedule a retransmission request for it.","flags":"readable, writable","type":"Boolean","default":"true"},"rtx-delay":{"blurb":"Extra time in ms to wait before sending retransmission event (-1 automatic)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"rtx-min-delay":{"blurb":"Minimum time in ms to wait before sending retransmission event","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"rtx-delay-reorder":{"blurb":"Sending retransmission event when this much reordering (0 disable)","flags":"readable, writable","type":"Integer","default":"3","range_max":"2147483647","range_min":"-1"},"rtx-retry-timeout":{"blurb":"Retry sending a transmission event after this timeout in ms (-1 automatic)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"rtx-min-retry-timeout":{"blurb":"Minimum timeout between sending a transmission event in ms (-1 automatic)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"rtx-retry-period":{"blurb":"Try to get a retransmission for this many ms (-1 automatic)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"rtx-max-retries":{"blurb":"The maximum number of retries to request a retransmission. (-1 not limited)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"rtx-deadline":{"blurb":"The deadline for a valid RTX request in milliseconds. (-1 automatic)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"rtx-stats-timeout":{"blurb":"The time to wait for a retransmitted packet after it has been considered lost in order to collect statistics (ms)","flags":"readable, writable","type":"Unsigned Integer","default":"1000","range_max":"4294967295","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"max-rtcp-rtp-time-diff":{"blurb":"Maximum amount of time in ms that the RTP time in RTCP SRs is allowed to be ahead (-1 disabled)","flags":"readable, writable","type":"Integer","default":"1000","range_max":"2147483647","range_min":"-1"},"max-dropout-time":{"blurb":"The maximum time (milliseconds) of missing packets tolerated.","flags":"readable, writable","type":"Unsigned Integer","default":"60000","range_max":"2147483647","range_min":"0"},"max-misorder-time":{"blurb":"The maximum time (milliseconds) of misordered packets tolerated.","flags":"readable, writable","type":"Unsigned Integer","default":"2000","range_max":"4294967295","range_min":"0"},"rfc7273-sync":{"blurb":"Synchronize received streams to the RFC7273 clock (requires clock and offset to be provided)","flags":"readable, writable","type":"Boolean","default":"false"},"faststart-min-packets":{"blurb":"The number of consecutive packets needed to start (set to 0 to disable faststart. The jitterbuffer will by default start after the latency has elapsed)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"rtpptdemux","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Demux","Klass":"Demux/Network/RTP","Description":"Parses codec streams transmitted in the same RTP session","Author":"Kai Vehmanen <kai.vehmanen@nokia.com>","Classification":"Demux"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src_%u","Availability":"Sometimes","Capabilities":{"application/x-rtp":{"payload":"[ 0, 255 ]"}}}]},"Pads":{"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpptdemux"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"ignored-payload-types":{"blurb":"Packets with these payload types will be dropped","flags":"readable, writable","type":"GstValueArray of GValues of type gint","default":"<  >"}}},{"name":"rtpsession","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Session","Klass":"Filter/Network/RTP","Description":"Implement an RTP session","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"recv_rtp_sink","Availability":"On request","Capabilities":{"application/x-rtp":{}}},{"padname":"recv_rtcp_sink","Availability":"On request","Capabilities":{"application/x-rtcp":{}}},{"padname":"send_rtp_sink","Availability":"On request","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"recv_rtp_src","Availability":"Sometimes","Capabilities":{"application/x-rtp":{}}},{"padname":"sync_src","Availability":"Sometimes","Capabilities":{"application/x-rtcp":{}}},{"padname":"send_rtp_src","Availability":"Sometimes","Capabilities":{"application/x-rtp":{}}},{"padname":"send_rtcp_src","Availability":"On request","Capabilities":{"application/x-rtcp":{}}}]},"Pads":null,"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpsession"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"bandwidth":{"blurb":"The bandwidth of the session in bytes per second (0 for auto-discover)","flags":"readable, writable","type":"Double","default":"0","range_max":"1.79769e+308","range_min":"0"},"rtcp-fraction":{"blurb":"The RTCP bandwidth of the session in bytes per second (or as a real fraction of the RTP bandwidth if < 1.0)","flags":"readable, writable","type":"Double","default":"0.05","range_max":"1.79769e+308","range_min":"0"},"rtcp-rr-bandwidth":{"blurb":"The RTCP bandwidth used for receivers in bytes per second (-1 = default)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"rtcp-rs-bandwidth":{"blurb":"The RTCP bandwidth used for senders in bytes per second (-1 = default)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"sdes":{"blurb":"The SDES items of this session","flags":"readable, writable","type":"Boxed pointer of type GstStructure"},"num-sources":{"blurb":"The number of sources in the session","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"num-active-sources":{"blurb":"The number of active sources in the session","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"internal-session":{"blurb":"The internal RTPSession object","flags":"readable","type":"Object of type RTPSession"},"use-pipeline-clock":{"blurb":"Use the pipeline running-time to set the NTP time in the RTCP SR messages (DEPRECATED: Use ntp-time-source property)","flags":"readable, writable, deprecated","type":"Boolean","default":"false"},"rtcp-min-interval":{"blurb":"Minimum interval between Regular RTCP packet (in ns)","flags":"readable, writable","type":"Unsigned Integer64","default":"5000000000","range_max":"18446744073709551615","range_min":"0"},"probation":{"blurb":"Consecutive packet sequence numbers to accept the source","flags":"readable, writable","type":"Unsigned Integer","default":"2","range_max":"4294967295","range_min":"0"},"max-dropout-time":{"blurb":"The maximum time (milliseconds) of missing packets tolerated.","flags":"readable, writable","type":"Unsigned Integer","default":"60000","range_max":"4294967295","range_min":"0"},"max-misorder-time":{"blurb":"The maximum time (milliseconds) of misordered packets tolerated.","flags":"readable, writable","type":"Unsigned Integer","default":"2000","range_max":"4294967295","range_min":"0"},"stats":{"blurb":"Various statistics","flags":"readable","type":"Boxed pointer of type GstStructure"},"rtp-profile":{"blurb":"RTP profile to use","flags":"readable, writable","type":"Enum","default":"1","choice":{"0":"unknown          - GST_RTP_PROFILE_UNKNOWN","1":"avp              - GST_RTP_PROFILE_AVP","2":"savp             - GST_RTP_PROFILE_SAVP","3":"avpf             - GST_RTP_PROFILE_AVPF","4":"savpf            - GST_RTP_PROFILE_SAVPF"}},"ntp-time-source":{"blurb":"NTP time source for RTCP packets","flags":"readable, writable","type":"Enum","default":"0","choice":{"0":"ntp              - NTP time based on realtime clock","1":"unix             - UNIX time based on realtime clock","2":"running-time     - Running time based on pipeline clock","3":"clock-time       - Pipeline clock time"}},"rtcp-sync-send-time":{"blurb":"Use send time or capture time for RTCP sync (TRUE = send time, FALSE = capture time)","flags":"readable, writable","type":"Boolean","default":"true"}}},{"name":"rtprtxqueue","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Retransmission Queue","Klass":"Codec","Description":"Keep RTP packets in a queue for retransmission","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Other"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtprtxqueue"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"max-size-time":{"blurb":"Amount of ms to queue (0 = unlimited)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"max-size-packets":{"blurb":"Amount of packets to queue (0 = unlimited)","flags":"readable, writable","type":"Unsigned Integer","default":"100","range_max":"4294967295","range_min":"0"},"requests":{"blurb":"Total number of retransmission requests","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"fulfilled-requests":{"blurb":"Number of fulfilled retransmission requests","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"rtprtxreceive","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Retransmission receiver","Klass":"Codec","Description":"Receive retransmitted RTP packets according to RFC4588","Author":"Julien Isorce <julien.isorce@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtprtxreceive"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"payload-type-map":{"blurb":"Map of original payload types to their retransmission payload types","flags":"readable, writable","type":"Boxed pointer of type GstStructure"},"num-rtx-requests":{"blurb":"Number of retransmission events received","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"num-rtx-packets":{"blurb":" Number of retransmission packets received","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"num-rtx-assoc-packets":{"blurb":"Number of retransmission packets correctly associated with retransmission requests","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"rtprtxsend","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP Retransmission Sender","Klass":"Codec","Description":"Retransmit RTP packets when needed, according to RFC4588","Author":"Julien Isorce <julien.isorce@collabora.co.uk>","Classification":"Other"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{"clock-rate":"[ 1, 2147483647 ]"}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"},"SINK":{"name":"sink","Pad Template":"sink"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtprtxsend"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"ssrc-map":{"blurb":"Map of SSRCs to their retransmission SSRCs for SSRC-multiplexed mode (default = random)","flags":"writable","type":"Boxed pointer of type GstStructure"},"payload-type-map":{"blurb":"Map of original payload types to their retransmission payload types","flags":"readable, writable","type":"Boxed pointer of type GstStructure"},"max-size-time":{"blurb":"Amount of ms to queue (0 = unlimited)","flags":"readable, writable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"max-size-packets":{"blurb":"Amount of packets to queue (0 = unlimited)","flags":"readable, writable","type":"Unsigned Integer","default":"100","range_max":"32767","range_min":"0"},"num-rtx-requests":{"blurb":"Number of retransmission events received","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"num-rtx-packets":{"blurb":" Number of retransmission packets sent","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"}}},{"name":"rtpssrcdemux","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP SSRC Demux","Klass":"Demux/Network/RTP","Description":"Splits RTP streams based on the SSRC","Author":"Wim Taymans <wim.taymans@gmail.com>","Classification":"Demux"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink","Availability":"Always","Capabilities":{"application/x-rtp":{}}},{"padname":"rtcp_sink","Availability":"Always","Capabilities":{"application/x-rtcp":{}}}],"SRC template":[{"padname":"src_%u","Availability":"Sometimes","Capabilities":{"application/x-rtp":{}}},{"padname":"rtcp_src_%u","Availability":"Sometimes","Capabilities":{"application/x-rtcp":{}}}]},"Pads":{"SINK":[{"name":"sink","Pad Template":"sink"},{"name":"rtcp_sink","Pad Template":"rtcp_sink"}]},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpssrcdemux"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"}}},{"name":"rtpmux","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP muxer","Klass":"Codec/Muxer","Description":"multiplex N rtp streams into one","Author":"Zeeshan Ali <first.last@nokia.com>","Classification":"Mux"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpmux"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"}}},{"name":"rtpdtmfmux","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP muxer","Klass":"Codec/Muxer","Description":"mixes RTP DTMF streams into other RTP streams","Author":"Zeeshan Ali <first.last@nokia.com>","Classification":"Mux"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":{"application/x-rtp":{}}},{"padname":"priority_sink_%u","Availability":"On request","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpdtmfmux"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"timestamp-offset":{"blurb":"Offset to add to all outgoing timestamps (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"seqnum-offset":{"blurb":"Offset to add to all outgoing seqnum (-1 = random)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"},"seqnum":{"blurb":"The RTP sequence number of the last processed packet","flags":"readable","type":"Unsigned Integer","default":"0","range_max":"4294967295","range_min":"0"},"ssrc":{"blurb":"The SSRC of the packets (default == random)","flags":"readable, writable, changeable in NULL, READY, PAUSED or PLAYING state","type":"Unsigned Integer","default":"4294967295","range_max":"4294967295","range_min":"0"}}},{"name":"rtpfunnel","Factory Details":{"Rank":"none (0)","GraphAgentElement":false,"Long-name":"RTP funnel","Klass":"RTP Funneling","Description":"Funnel RTP buffers together for multiplexing","Author":"Havard Graff <havard@gstip.com>","Classification":"Other"},"Plugin Details":{"Name":"rtpmanager","Description":"RTP session management plugin library","Filename":"/home/zhongzhi20/MindXSDK/mxVision-2.0.2/opensource/lib/gstreamer-1.0/libgstrtpmanager.so","Version":"1.16.2","License":"LGPL","Source module":"gst-plugins-good","Binary package":"GStreamer Good Plug-ins source release","Origin URL":"Unknown package origin"},"Pad Templates":{"SINK template":[{"padname":"sink_%u","Availability":"On request","Capabilities":{"application/x-rtp":{}}}],"SRC template":[{"padname":"src","Availability":"Always","Capabilities":{"application/x-rtp":{}}}]},"Pads":{"SRC":{"name":"src","Pad Template":"src"}},"Element Properties":{"name":{"blurb":"The name of the object","flags":"readable, writable","type":"String","default":"test_rtpfunnel"},"parent":{"blurb":"The parent of the object","flags":"readable, writable","type":"Object of type GstObject"},"common-ts-offset":{"blurb":"Use the same RTP timestamp offset for all sinkpads (-1 = disable)","flags":"readable, writable","type":"Integer","default":"-1","range_max":"2147483647","range_min":"-1"}}}]
